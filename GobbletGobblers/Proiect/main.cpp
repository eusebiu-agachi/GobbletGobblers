#include <iostream>
#include<graphics.h>
#include<windows.h>
#include<winbgim.h>
#include <stdlib.h>
#include <mmsystem.h>
#include<conio.h>
#define FUNDAL MAGENTA

using namespace std;
int stanga, sus, width=300, height=300, latura=100, numar;
struct tabla
{
    int piesa_mica;
    int piesa_medie;
    int piesa_mare;
};
tabla tab1[3][3], tab2[3][3];
int tab_pp[3][3]= {0};
struct Jucator
{
    char culoare;
    int numar_Ordine;
};

double latime_ecran = GetSystemMetrics(SM_CXSCREEN);
double inaltime_ecran = GetSystemMetrics(SM_CYSCREEN);
int xmij = latime_ecran / 2;
int ymij = inaltime_ecran / 2;
int latura_patrat=150;
int tura = 0, mute = 0;

int sfarsit_Joc();
void main_menu();
void pune_piesa(int culoare1, int culoare2);
void Afisare(int culoare1, int culoare2);

void patrat(int x, int y, int L)
{
    int lg2= L/2;
    line(x-lg2, y-lg2, x+lg2, y-lg2); /// linia de sus
    line(x+lg2, y-lg2, x+lg2, y+lg2); /// linia din dreapta
    line(x+lg2, y+lg2, x-lg2, y+lg2); /// linia de jos
    line(x-lg2, y+lg2, x-lg2, y-lg2); /// linia din stanga
}

void Label (int aux)
{
    setcolor(WHITE);
    int lg_label = textwidth("ESTE RANDUL JUCATORULUI X!");
    if (aux % 2 == 0)
    {
        /// este randul jucatorului 1 sa mute
        outtextxy(latime_ecran/2 - latime_ecran/4 - lg_label/2 - 75, inaltime_ecran - 100, "Este randul jucatorului 1!");
        setcolor(MAGENTA);
        outtextxy(latime_ecran/2 + latime_ecran/4 - lg_label/2 + 75, inaltime_ecran - 100, "Este randul jucatorului 2!");
    }
    else if (aux % 2 == 1)
    {
        /// este randul jucatorului 2 sa mute
        outtextxy(latime_ecran/2 + latime_ecran/4 - lg_label/2 + 75, inaltime_ecran - 100, "Este randul jucatorului 2!");
        setcolor(MAGENTA);
        outtextxy(latime_ecran/2 - latime_ecran/4 - lg_label/2 - 75, inaltime_ecran - 100, "Este randul jucatorului 1!");
    }
}

void culoare_piese()
{
    cleardevice();
    setcolor(WHITE);
    settextstyle(COMPLEX_FONT, HORIZ_DIR, 16);
    int lg=textwidth("Alegeti culoarea jucatorului 1, ");
    int lg2=textwidth("respectiv a jucatorului 2:");
    outtextxy(latime_ecran/2-lg/2, 250, "Alegeti culoarea jucatorului 1, ");
    outtextxy(latime_ecran/2-lg2/2, 300, "respectiv a jucatorului 2:");

    setcolor(YELLOW); ///14
    circle(latime_ecran/2, 550, 40);
    setfillstyle(SOLID_FILL,YELLOW);
    floodfill(latime_ecran/2, 550, YELLOW);

    setcolor(LIGHTRED); ///12
    circle(latime_ecran/2-120, 550, 40);
    setfillstyle(SOLID_FILL, LIGHTRED);
    floodfill(latime_ecran/2-120, 550, 12);

    setcolor(LIGHTBLUE); ///9
    circle(latime_ecran/2+120, 550, 40);
    setfillstyle(SOLID_FILL,LIGHTBLUE);
    floodfill(latime_ecran/2+120, 550, 9);

    setcolor(LIGHTGREEN); ///10
    circle(latime_ecran/2+240, 550, 40);
    setfillstyle(SOLID_FILL, LIGHTGREEN);
    floodfill(latime_ecran/2+240, 550, 10);

    setcolor(CYAN); ///1
    circle(latime_ecran/2-240, 550, 40);
    setfillstyle(SOLID_FILL, CYAN);
    floodfill(latime_ecran/2-240, 550, CYAN);

    int culoare1, culoare2; ///culorile jucatorilor
    int ok=0;

    int z;
    while(ok==0)
    {
        clearmouseclick(WM_LBUTTONDOWN);
        ///jucator1
        int x=mousex();
        int y=mousey();

        if(x>=latime_ecran/2-240-20 && x<=latime_ecran/2-240+20 && y>=510 && y<=590 && ismouseclick(WM_LBUTTONDOWN))
        {
            culoare1=3; ///culoarea cyan
            setfillstyle(SOLID_FILL, MAGENTA);
            floodfill(latime_ecran/2-240, 550, MAGENTA);
            setcolor(MAGENTA);
            circle(latime_ecran/2-240, 550, 40);
            clearmouseclick(WM_LBUTTONDOWN);
            ok=1;
        }
        else if(x>=latime_ecran/2-120-20 && x<=latime_ecran/2-120+20 && y>=510 && y<=590 && ismouseclick(WM_LBUTTONDOWN))
        {
            culoare1=12; ///culoarea rosu
            setfillstyle(SOLID_FILL, MAGENTA);
            floodfill(latime_ecran/2-140, 550, MAGENTA);
            setcolor(MAGENTA);
            circle(latime_ecran/2-140, 550, 40);
            clearmouseclick(WM_LBUTTONDOWN);
            ok=1;
        }
        else if(x>=latime_ecran/2-20 && x<=latime_ecran/2+20 && y>=510 && y<=590 && ismouseclick(WM_LBUTTONDOWN))
        {
            culoare1=14; ///culoarea galben
            setfillstyle(SOLID_FILL, MAGENTA);
            floodfill(latime_ecran/2, 550, MAGENTA);
            setcolor(MAGENTA);
            circle(latime_ecran/2, 550, 40);
            clearmouseclick(WM_LBUTTONDOWN);
            ok=1;
        }
        else if(x>=latime_ecran/2+120-20 && x<=latime_ecran/2+120+20 && y>=510 && y<=590 && ismouseclick(WM_LBUTTONDOWN))
        {
            culoare1=9; ///culoarea albastru
            setfillstyle(SOLID_FILL, MAGENTA);
            floodfill(latime_ecran/2+120, 550, MAGENTA);
            setcolor(MAGENTA);
            circle(latime_ecran/2+120, 550, 40);
            clearmouseclick(WM_LBUTTONDOWN);
            ok=1;
        }
        else if(x>=latime_ecran/2+240-20 && x<=latime_ecran/2+240+20 && y>=510 && y<=590 && ismouseclick(WM_LBUTTONDOWN))
        {
            culoare1=10; ///culoarea verde
            setfillstyle(SOLID_FILL, MAGENTA);
            floodfill(latime_ecran/2+240, 550, MAGENTA);
            setcolor(MAGENTA);
            circle(latime_ecran/2+240, 550, 40);
            clearmouseclick(WM_LBUTTONDOWN);
            ok=1;
        }

    }


    ok=0;

    while(ok==0)
    {
        clearmouseclick(WM_LBUTTONDOWN);
        ///jucator2
        int x=mousex();
        int y=mousey();
        if(x>=latime_ecran/2-240-20 && x<=latime_ecran/2-240+20 && y>=510 && y<=590 && getpixel(x, y)!=MAGENTA && ismouseclick(WM_LBUTTONDOWN))
        {
            // if(culoare1!=13)
            {
                culoare2=3; ///culoarea cyan
                circle(latime_ecran/2-240, 550, 42);
                setfillstyle(SOLID_FILL, MAGENTA);
                floodfill(latime_ecran/2-240, 550, MAGENTA);
                clearmouseclick(WM_LBUTTONDOWN);
                ok=1;
            }
        }
        else if(x>=latime_ecran/2-120-20 && x<=latime_ecran/2-120+20 && y>=510 && y<=590 && getpixel(x, y)!=MAGENTA && ismouseclick(WM_LBUTTONDOWN))
        {
            //if(culoare1!=12)
            {
                culoare2=12; ///culoarea rosu
                setcolor(MAGENTA);
                setlinestyle(DOTTED_LINE, 0, 3);
                circle(latime_ecran/2-120, 550, 42);
                setfillstyle(SOLID_FILL, MAGENTA);
                floodfill(latime_ecran/2-120, 550, MAGENTA);
                clearmouseclick(WM_LBUTTONDOWN);
                ok=1;
            }

        }
        else if(x>=latime_ecran/2-20 && x<=latime_ecran/2+20 && y>=510 && y<=590 && getpixel(x, y)!=MAGENTA && ismouseclick(WM_LBUTTONDOWN))
        {
            // if(culoare1!=14)
            {
                culoare2=14; ///culoarea galben
                circle(latime_ecran/2, 550, 42);
                setfillstyle(SOLID_FILL,MAGENTA);
                floodfill(latime_ecran/2, 550, MAGENTA);
                clearmouseclick(WM_LBUTTONDOWN);
                ok=1;
            }

        }
        else if(x>=latime_ecran/2+120-20 && x<=latime_ecran/2+120+20 && y>=510 && y<=590 && getpixel(x, y)!=MAGENTA && ismouseclick(WM_LBUTTONDOWN))
        {
            //if(culoare1!=9)
            {
                culoare2=9; ///culoarea albastru
                circle(latime_ecran/2+120, 550, 42);
                setfillstyle(SOLID_FILL, MAGENTA);
                floodfill(latime_ecran/2+120, 550, MAGENTA);
                clearmouseclick(WM_LBUTTONDOWN);
                ok=1;
            }

        }
        else if(x>=latime_ecran/2+240-20 && x<=latime_ecran/2+240+20 && y>=510 && y<=590 && getpixel(x, y)!=MAGENTA && ismouseclick(WM_LBUTTONDOWN))
        {
            // if(culoare1!=10)
            {
                culoare2=10; ///culoarea verde
                setcolor(LIGHTCYAN);
                circle(latime_ecran/2+240, 550, 42);
                setfillstyle(SOLID_FILL, MAGENTA);
                floodfill(latime_ecran/2+240, 550, MAGENTA);
                clearmouseclick(WM_LBUTTONDOWN);
                ok=1;
            }

        }

    }

    setlinestyle(SOLID_LINE, 0, 1);
    Afisare(culoare1, culoare2);
}

void ending_window(int culoare1, int culoare2)
{
    cleardevice();

    if (sfarsit_Joc()==1)
    {
        settextstyle(COMPLEX_FONT, HORIZ_DIR,30);
        setcolor(LIGHTGREEN);
        int lungime1=textwidth("JUCATORUL 1 A CASTIGAT!");

        settextstyle(COMPLEX_FONT, HORIZ_DIR, 15);
        int lungime2=textwidth("Alege una dintre urmatoarele optiuni:");

        settextstyle(COMPLEX_FONT, HORIZ_DIR, 30);
        outtextxy(latime_ecran/2-lungime1/2, 80, "JUCATORUL 1 A CASTIGAT!");

        settextstyle(COMPLEX_FONT, HORIZ_DIR, 15);
        outtextxy(latime_ecran/2-lungime2/2, 200, "Alege una dintre urmatoarele optiuni:");

        settextstyle(COMPLEX_FONT, HORIZ_DIR, 18);
        setcolor(LIGHTCYAN);

        int lungime_start =textwidth("RESTART");
        int h_start=textheight("RESTART");
        outtextxy(latime_ecran/2-lungime_start/2, 300, "RESTART");

        int lungime_menu=textwidth("MENIU");
        outtextxy(latime_ecran/2-lungime_menu/2, 400, "MENIU");

        int lungime_exit=textwidth("EXIT");
        outtextxy(latime_ecran/2-lungime_exit/2, 500, "EXIT");

        clearmouseclick(WM_LBUTTONDOWN);
        while(true)
        {
            int x=mousex();
            int y=mousey();
            if(y>=300 && y<= 350 && x>=latime_ecran / 2-lungime_start/2 && x<=latime_ecran / 2+lungime_start/2)
            {
                setcolor(BLACK);
                outtextxy(latime_ecran/2-lungime_start/2, 300, "RESTART");
                delay(60);
                if (ismouseclick(WM_LBUTTONDOWN))
                {

                    for (int i = 0; i < 3; i++)
                        for (int j = 0; j < 3; j++)
                        {
                            tab_pp[i][j] = 0;
                            tab1[i][j].piesa_mare = 0;
                            tab1[i][j].piesa_medie = 0;
                            tab1[i][j].piesa_mica = 0;
                            tab2[i][j].piesa_mare = 0;
                            tab2[i][j].piesa_medie = 0;
                            tab2[i][j].piesa_mica = 0;

                        }
                    cleardevice();
                    setbkcolor(MAGENTA);
                    Afisare(culoare1, culoare2);
                }
                else
                {
                    setcolor(LIGHTCYAN);
                    outtextxy(latime_ecran/2-lungime_start/2, 300, "RESTART");
                }
            }
            if(y>=400 && y<=450 && x>=latime_ecran/2-lungime_exit/2 && x<=latime_ecran/2+lungime_exit/2)
            {
                setcolor(BLACK);
                outtextxy(latime_ecran/2-lungime_menu/2, 400, "MENIU");
                delay(60);
                if (ismouseclick(WM_LBUTTONDOWN))
                {
                    for (int i = 0; i < 3; i++)
                        for (int j = 0; j < 3; j++)
                        {
                            tab_pp[i][j] = 0;
                            tab1[i][j].piesa_mare = 0;
                            tab1[i][j].piesa_medie = 0;
                            tab1[i][j].piesa_mica = 0;
                            tab2[i][j].piesa_mare = 0;
                            tab2[i][j].piesa_medie = 0;
                            tab2[i][j].piesa_mica = 0;
                        }
                    main_menu();
                }

            }
            else
            {
                setcolor(LIGHTCYAN);
                outtextxy(latime_ecran/2-lungime_menu/2, 400, "MENIU");
            }

            if(y>=500 && y<=550 && x>=latime_ecran/2-lungime_exit && x<=latime_ecran/2+lungime_exit/2)
            {
                setcolor(BLACK);
                outtextxy(latime_ecran/2-lungime_exit/2, 500, "EXIT");
                delay(60);
                if (ismouseclick(WM_LBUTTONDOWN))
                    closegraph();
            }
            else
            {
                setcolor(LIGHTCYAN);
                outtextxy(latime_ecran/2-lungime_exit/2, 500, "EXIT");
            }
            clearmouseclick(WM_LBUTTONDOWN);
        }
    }

    else if (sfarsit_Joc()==2)
    {
        settextstyle(COMPLEX_FONT, HORIZ_DIR,30);
        setcolor(LIGHTGREEN);
        int lungime1=textwidth("JUCATORUL 2 A CASTIGAT!");

        settextstyle(COMPLEX_FONT, HORIZ_DIR, 15);
        int lungime2=textwidth("Alege una dintre urmatoarele optiuni:");

        settextstyle(COMPLEX_FONT, HORIZ_DIR, 30);
        outtextxy(latime_ecran/2-lungime1/2, 80, "JUCATORUL 2 A CASTIGAT!");

        settextstyle(COMPLEX_FONT, HORIZ_DIR, 15);
        outtextxy(latime_ecran/2-lungime2/2, 200, "Alege una dintre urmatoarele optiuni:");

        settextstyle(COMPLEX_FONT, HORIZ_DIR, 18);
        setcolor(LIGHTCYAN);

        int lungime_start =textwidth("RESTART");
        int h_start=textheight("RESTART");
        outtextxy(latime_ecran/2-lungime_start/2, 300, "RESTART");

        int lungime_menu=textwidth("MENIU");
        outtextxy(latime_ecran/2-lungime_menu/2, 400, "MENIU");

        int lungime_exit=textwidth("EXIT");
        outtextxy(latime_ecran/2-lungime_exit/2, 500, "EXIT");

        clearmouseclick(WM_LBUTTONDOWN);
        while(true)
        {
            int x=mousex();
            int y=mousey();
            if(y>=300 && y<= 350 && x>=latime_ecran / 2-lungime_start/2 && x<=latime_ecran / 2+lungime_start/2)
            {
                setcolor(BLACK);
                outtextxy(latime_ecran/2-lungime_start/2, 300, "RESTART");
                delay(60);
                if (ismouseclick(WM_LBUTTONDOWN))
                {

                    for (int i = 0; i < 3; i++)
                        for (int j = 0; j < 3; j++)
                        {
                            tab_pp[i][j] = 0;
                            tab1[i][j].piesa_mare = 0;
                            tab1[i][j].piesa_medie = 0;
                            tab1[i][j].piesa_mica = 0;
                            tab2[i][j].piesa_mare = 0;
                            tab2[i][j].piesa_medie = 0;
                            tab2[i][j].piesa_mica = 0;

                        }
                    cleardevice();
                    setbkcolor(MAGENTA);
                    Afisare(culoare1, culoare2);
                }
                else
                {
                    setcolor(LIGHTCYAN);
                    outtextxy(latime_ecran/2-lungime_start/2, 300, "RESTART");
                }
            }
            if(y>=400 && y<=450 && x>=latime_ecran/2-lungime_exit/2 && x<=latime_ecran/2+lungime_exit/2)
            {
                setcolor(BLACK);
                outtextxy(latime_ecran/2-lungime_menu/2, 400, "MENIU");
                delay(60);
                if (ismouseclick(WM_LBUTTONDOWN))
                {
                    for (int i = 0; i < 3; i++)
                        for (int j = 0; j < 3; j++)
                        {
                            tab_pp[i][j] = 0;
                            tab1[i][j].piesa_mare = 0;
                            tab1[i][j].piesa_medie = 0;
                            tab1[i][j].piesa_mica = 0;
                            tab2[i][j].piesa_mare = 0;
                            tab2[i][j].piesa_medie = 0;
                            tab2[i][j].piesa_mica = 0;
                        }
                    main_menu();
                }

            }
            else
            {
                setcolor(LIGHTCYAN);
                outtextxy(latime_ecran/2-lungime_menu/2, 400, "MENIU");
            }

            if(y>=500 && y<=550 && x>=latime_ecran/2-lungime_exit && x<=latime_ecran/2+lungime_exit/2)
            {
                setcolor(BLACK);
                outtextxy(latime_ecran/2-lungime_exit/2, 500, "EXIT");
                delay(60);
                if (ismouseclick(WM_LBUTTONDOWN))
                    closegraph();
            }
            else
            {
                setcolor(LIGHTCYAN);
                outtextxy(latime_ecran/2-lungime_exit/2, 500, "EXIT");
            }
            clearmouseclick(WM_LBUTTONDOWN);
        }
    }
}

int sfarsit_Joc()
{
    if (((tab_pp[0][0] > 0) && (tab_pp[0][1] > 0) && (tab_pp[0][2] > 0)) || /// prima linie
            ((tab_pp[1][0] > 0) && (tab_pp[1][1] > 0) && (tab_pp[1][2] > 0)) || /// a doua linie
            ((tab_pp[2][0] > 0) && (tab_pp[2][1] > 0) && (tab_pp[2][2] > 0)) || /// a treia linie
            ((tab_pp[0][0] > 0) && (tab_pp[1][0] > 0) && (tab_pp[2][0] > 0)) || /// prima coloana
            ((tab_pp[0][1] > 0) && (tab_pp[1][1] > 0) && (tab_pp[2][1] > 0)) || /// a doua coloana
            ((tab_pp[0][2] > 0) && (tab_pp[1][2] > 0) && (tab_pp[2][2] > 0)) || /// a treia coloana
            ((tab_pp[0][0] > 0) && (tab_pp[1][1] > 0) && (tab_pp[2][2] > 0)) || /// diagonala principala
            ((tab_pp[0][2] > 0) && (tab_pp[1][1] > 0) && (tab_pp[2][0] > 0))) /// diagonala secundara
        return 1; /// a castigat jucatorul 1
    if (((tab_pp[0][0] < 0) && (tab_pp[0][1] < 0) && (tab_pp[0][2] < 0)) || /// prima linie
            ((tab_pp[1][0] < 0) && (tab_pp[1][1] < 0) && (tab_pp[1][2] < 0)) || /// a doua linie
            ((tab_pp[2][0] < 0) && (tab_pp[2][1] < 0) && (tab_pp[2][2] < 0)) || /// a treia linie
            ((tab_pp[0][0] < 0) && (tab_pp[1][0] < 0) && (tab_pp[2][0] < 0)) || /// prima coloana
            ((tab_pp[0][1] < 0) && (tab_pp[1][1] < 0) && (tab_pp[2][1] < 0)) || /// a doua coloana
            ((tab_pp[0][2] < 0) && (tab_pp[1][2] < 0) && (tab_pp[2][2] < 0)) || /// a treia coloana
            ((tab_pp[0][0] < 0) && (tab_pp[1][1] < 0) && (tab_pp[2][2] < 0)) || /// diagonala principala
            ((tab_pp[0][2] < 0) && (tab_pp[1][1] < 0) && (tab_pp[2][0] < 0))) /// diagonala secundara
        return 2; /// a castigat jucatorul 2

    return 0; /// momentan nu a castigat nimeni
}

int afisare_piesa_pe_tabla(int contor, int raza, int culoare1, int culoare2)
{
    clearmouseclick(WM_LBUTTONDOWN);
//     for(int i=0; i<3; i++)
//        {
//            for(int j=0; j<3 ; j++)
//                cout<<tab_pp[i][j]<<" ";
//            cout<<endl;
//        }

    if (contor == 0)
    {
        setfillstyle(SOLID_FILL, culoare1);
        setcolor(culoare1);
    } /// 0 este reprezentarea culorii galben
    else if (contor == 1)
    {
        setfillstyle(SOLID_FILL, culoare2);
        setcolor(culoare2);
    } /// 1 este reprezentarea culorii albastre



    while (sfarsit_Joc() == 0)
    {
        int x = mousex();
        int y = mousey();

        if (contor == 0 && raza == 0)
            pune_piesa(culoare1, culoare2); ///CAZUL DE EXCEPTIE

        /// patrat stanga sus- pozitia 00
        if (x >= xmij - latura_patrat - latura_patrat/2 && x <= xmij - latura_patrat/2 &&
                y >= ymij - latura_patrat - latura_patrat/2 && y <= ymij - latura_patrat/2)
        {
            if (ismouseclick(WM_LBUTTONDOWN))
            {
                if(contor==0) ///verificam tipul piesei si actualizam in tab_pp si tab corespunzator piesei
                {
                    ///tab jucator 1

                    if (raza==20 && tab_pp[0][0]==0)
                    {
                        tab1[0][0].piesa_mica=1;
                        tab_pp[0][0]=1; /// actualizare tabla principala
                        circle(xmij - latura_patrat, ymij - latura_patrat, raza);
                        floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare1 );
                    }

                    else if(raza==35 && tab2[0][0].piesa_medie==0 && tab1[0][0].piesa_mare==0 && tab2[0][0].piesa_mare==0 && tab1[0][0].piesa_mare==0)
                    {
                        tab1[0][0].piesa_medie=2;
                        tab_pp[0][0]=2;
                        circle(xmij - latura_patrat, ymij - latura_patrat, raza);
                        floodfill(xmij +21- latura_patrat, ymij - latura_patrat, culoare1 );
                    }

                    else  if(raza==50 && tab2[0][0].piesa_mare==0 && tab2[0][0].piesa_mare==0)
                    {
                        tab1[0][0].piesa_mare=3;
                        tab_pp[0][0]=3;
                        circle(xmij - latura_patrat, ymij - latura_patrat, raza);
                        floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare1 );
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }
                else if(contor==1)
                {
                    ///tab jucator 2
                    if (raza==20 && tab_pp[0][0]==0)
                    {
                        tab2[0][0].piesa_mica=-1;
                        tab_pp[0][0]=-1;
                        circle(xmij - latura_patrat, ymij - latura_patrat, raza);
                        floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare2 );
                    }

                    else if(raza==35 && tab2[0][0].piesa_medie==0 && tab1[0][0].piesa_medie==0 && tab2[0][0].piesa_mare==0 && tab1[0][0].piesa_mare==0)
                    {
                        tab2[0][0].piesa_medie=-2;
                        tab_pp[0][0]=-2;
                        circle(xmij - latura_patrat, ymij - latura_patrat, raza);
                        floodfill(xmij +21- latura_patrat, ymij - latura_patrat, culoare2 );
                    }

                    else if(raza==50 && tab2[0][0].piesa_mare==0 && tab1[0][0].piesa_mare==0)
                    {

                        tab2[0][0].piesa_mare=-3;
                        tab_pp[0][0]=-3;
                        circle(xmij - latura_patrat, ymij - latura_patrat, raza);
                        floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare2 );
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }
                else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                clearmouseclick(WM_LBUTTONDOWN);
                pune_piesa(culoare1, culoare2);
            }


        }

        /// patrat mijloc sus - pozitia 01
        else if (x >= xmij - latura_patrat/2 && x <= xmij + latura_patrat/2 &&
                 y >= ymij - latura_patrat - latura_patrat/2 && y <= ymij - latura_patrat/2)
        {
            if (ismouseclick(WM_LBUTTONDOWN))
            {
                if (contor==0)
                {

                    if (raza==20 && tab_pp[0][1]==0)
                    {
                        tab1[0][1].piesa_mica=1;
                        tab_pp[0][1]=1; /// actualizare tabla principala
                        circle (xmij, ymij - latura_patrat, raza);
                        floodfill(xmij, ymij - latura_patrat, culoare1);
                    }

                    else if(raza==35 && tab1[0][1].piesa_medie==0 && tab2[0][1].piesa_medie==0 && tab1[0][1].piesa_mare==0 && tab2[0][1].piesa_mare==0)
                    {
                        tab1[0][1].piesa_medie=2;
                        tab_pp[0][1]=2;
                        circle (xmij, ymij - latura_patrat, raza);
                        floodfill(xmij+21, ymij - latura_patrat, culoare1);
                    }

                    else  if(raza==50 && tab1[0][1].piesa_mare!=3 && tab2[0][1].piesa_mare!=-3)
                    {
                        tab1[0][1].piesa_mare=3;
                        tab_pp[0][1]=3;
                        circle (xmij, ymij - latura_patrat, raza);
                        floodfill(xmij+36, ymij - latura_patrat, culoare1);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }

                else
                {

                    if (raza==20 && tab_pp[0][1]==0)
                    {
                        tab2[0][1].piesa_mica=-1;
                        tab_pp[0][1]=-1;
                        circle (xmij, ymij - latura_patrat, raza);
                        floodfill(xmij, ymij - latura_patrat, culoare2);
                    }

                    else if(raza==35 && tab1[0][1].piesa_medie==0 && tab2[0][1].piesa_medie==0 && tab1[0][1].piesa_mare==0 && tab2[0][1].piesa_mare==0)
                    {
                        tab2[0][1].piesa_medie=-2;
                        tab_pp[0][1]=-2;
                        circle (xmij, ymij - latura_patrat, raza);
                        floodfill(xmij+21, ymij - latura_patrat, culoare2);
                    }

                    else if(raza==50 && tab1[0][1].piesa_mare!=3 && tab2[0][1].piesa_mare!=-3)
                    {
                        tab2[0][1].piesa_mare=-3;
                        tab_pp[0][1]=-3;
                        circle (xmij, ymij - latura_patrat, raza);
                        floodfill(xmij+36, ymij - latura_patrat, culoare2);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }
                clearmouseclick(WM_LBUTTONDOWN);
                pune_piesa(culoare1, culoare2);
            }
        }



        /// patrat dreapta sus - pozitia 02
        if (x >= xmij + latura_patrat/2 && x <= xmij + latura_patrat/2 + latura_patrat &&
                y >= ymij - latura_patrat - latura_patrat/2 && y <= ymij - latura_patrat/2)
        {
            if (ismouseclick(WM_LBUTTONDOWN))
            {
                if(contor==0)
                {

                    if (raza==20 && tab_pp[0][0]==0)
                    {
                        tab1[0][2].piesa_mica=1;
                        tab_pp[0][2]=1; /// actualizare tabla principala
                        circle (xmij + latura_patrat, ymij - latura_patrat, raza);
                        floodfill (xmij + latura_patrat, ymij - latura_patrat, culoare1);
                    }

                    else if(raza==35  && tab1[0][2].piesa_medie==0 && tab2[0][2].piesa_medie==0 && tab1[0][2].piesa_mare==0 && tab2[0][1].piesa_mare==0)
                    {
                        tab1[0][2].piesa_medie=2;
                        tab_pp[0][2]=2;
                        circle (xmij + latura_patrat, ymij - latura_patrat, raza);
                        floodfill (xmij+21 + latura_patrat, ymij - latura_patrat, culoare1);
                    }

                    else  if(raza==50 && tab1[0][2].piesa_mare!=3 && tab2[0][2].piesa_mare!=-3)
                    {
                        tab1[0][2].piesa_mare=3;
                        tab_pp[0][2]=3;
                        circle (xmij + latura_patrat, ymij - latura_patrat, raza);
                        floodfill (xmij + latura_patrat+36, ymij - latura_patrat, culoare1);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }

                else
                {

                    if (raza==20 && tab_pp[0][2]==0)
                    {
                        tab2[0][2].piesa_mica=-1;
                        tab_pp[0][2]=-1;
                        circle (xmij + latura_patrat, ymij - latura_patrat, raza);
                        floodfill (xmij + latura_patrat, ymij - latura_patrat, culoare2);
                    }

                    else if(raza==35  && tab1[0][2].piesa_medie==0 && tab2[0][2].piesa_medie==0 && tab1[0][2].piesa_mare==0 && tab2[0][2].piesa_mare==0)
                    {
                        tab2[0][2].piesa_medie=-2;
                        tab_pp[0][2]=-2;
                        circle (xmij + latura_patrat, ymij - latura_patrat, raza);
                        floodfill (xmij +21+ latura_patrat, ymij - latura_patrat, culoare2);
                    }

                    else if(raza==50 && tab1[0][2].piesa_mare!=3 && tab2[0][2].piesa_mare!=-3)
                    {
                        tab2[0][2].piesa_mare=-3;
                        tab_pp[0][2]=-3;
                        circle (xmij + latura_patrat, ymij - latura_patrat, raza);
                        floodfill (xmij + latura_patrat +36, ymij - latura_patrat, culoare2);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }
                clearmouseclick(WM_LBUTTONDOWN);
                pune_piesa(culoare1, culoare2);
            }

        }



        /// patrat stanga mijloc - pozitia 10
        else if (x >= xmij - latura_patrat - latura_patrat/2 && x <= xmij - latura_patrat/2 &&
                 y >= ymij - latura_patrat/2 && y <= ymij + latura_patrat/2)
        {
            if (ismouseclick(WM_LBUTTONDOWN))
            {

                if(contor==0)
                {

                    if (raza==20 && tab_pp[1][0]==0)
                    {
                        tab1[1][0].piesa_mica=1;
                        tab_pp[1][0]=1; /// actualizare tabla principala
                        circle (xmij - latura_patrat, ymij, raza);
                        floodfill(xmij - latura_patrat, ymij, culoare1);
                    }

                    else if(raza==35 && tab1[1][0].piesa_medie==0 && tab2[1][0].piesa_medie==0 && tab1[1][0].piesa_mare==0 && tab2[1][0].piesa_mare==0)
                    {
                        tab1[1][0].piesa_medie=2;
                        tab_pp[1][0]=2;
                        circle (xmij - latura_patrat, ymij, raza);
                        floodfill(xmij +21- latura_patrat, ymij, culoare1);
                    }

                    else  if(raza==50 && tab1[1][0].piesa_mare!=3 && tab2[1][0].piesa_mare!=-3)
                    {
                        tab1[1][0].piesa_mare=3;
                        tab_pp[1][0]=3;
                        circle (xmij - latura_patrat, ymij, raza);
                        floodfill(xmij - latura_patrat+36, ymij, culoare1);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }

                else
                {
                    if (raza==20 && tab_pp[1][0]==0)
                    {
                        tab2[1][0].piesa_mica=-1;
                        tab_pp[1][0]=-1;
                        circle (xmij - latura_patrat, ymij, raza);
                        floodfill(xmij - latura_patrat, ymij, culoare2);
                    }

                    else if(raza==35 && tab1[1][0].piesa_medie==0 && tab2[1][0].piesa_medie==0 && tab1[1][0].piesa_mare==0 && tab2[1][0].piesa_mare==0)
                    {
                        tab2[1][0].piesa_medie=-2;
                        tab_pp[1][0]=-2;
                        circle (xmij - latura_patrat, ymij, raza);
                        floodfill(xmij +21- latura_patrat, ymij, culoare2);
                    }

                    else if(raza==50 && tab1[1][0].piesa_mare!=3 && tab2[1][0].piesa_mare!=-3)
                    {
                        tab2[1][0].piesa_mare=-3;
                        tab_pp[1][0]=-3;
                        circle (xmij - latura_patrat, ymij, raza);
                        floodfill(xmij - latura_patrat+36, ymij, culoare2);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }

                clearmouseclick(WM_LBUTTONDOWN);
                pune_piesa(culoare1, culoare2);
            }
        }


        /// patrat mijloc - pozitia 11
        else if (x >= xmij - latura_patrat/2 && x <= xmij + latura_patrat/2 &&
                 y >= ymij - latura_patrat/2 && y <= ymij + latura_patrat/2)
        {
            if (ismouseclick(WM_LBUTTONDOWN))
            {

                if(contor==0)
                {
                    if(raza==20 && tab_pp[1][1]==0)
                    {
                        tab1[1][1].piesa_mica=1;
                        tab_pp[1][1]=1; /// actualizare tabla principala
                        circle (xmij, ymij, raza);
                        floodfill(xmij, ymij, culoare1);
                    }

                    else if(raza==35 && tab1[1][1].piesa_medie==0 && tab2[1][1].piesa_medie==0 && tab1[1][1].piesa_mare==0 && tab2[1][1].piesa_mare==0)
                    {
                        tab1[1][1].piesa_medie=2;
                        tab_pp[1][1]=2;
                        circle (xmij, ymij, raza);
                        floodfill(xmij+21, ymij, culoare1);
                    }

                    else  if(raza==50 && tab1[1][1].piesa_mare!=3 && tab2[1][1].piesa_mare!=-3)
                    {
                        tab1[1][1].piesa_mare=3;
                        tab_pp[1][1]=3;
                        circle (xmij, ymij, raza);
                        floodfill(xmij+36, ymij, culoare1);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }

                else
                {

                    if (raza==20 && tab_pp[1][1]==0)
                    {
                        tab2[1][1].piesa_mica=-1;
                        tab_pp[1][1]=-1;
                        circle (xmij, ymij, raza);
                        floodfill(xmij, ymij, culoare2);
                    }

                    else if(raza==35 && tab1[1][1].piesa_medie==0 && tab2[1][1].piesa_medie==0 && tab1[1][1].piesa_mare==0 && tab2[1][1].piesa_mare==0)
                    {
                        tab2[1][1].piesa_medie=-2;
                        tab_pp[1][1]=-2;
                        circle (xmij, ymij, raza);
                        floodfill(xmij+21, ymij, culoare2);
                    }

                    else if(raza==50 && tab1[1][1].piesa_mare!=3 && tab2[1][1].piesa_mare!=-3)
                    {
                        tab2[1][1].piesa_mare=-3;
                        tab_pp[1][1]=-3;
                        circle (xmij, ymij, raza);
                        floodfill(xmij+36, ymij, culoare2);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);

                }

                clearmouseclick(WM_LBUTTONDOWN);
                pune_piesa(culoare1, culoare2);
            }
        }

        /// patrat dreapta mijloc - pozitia 12
        else if (x >= xmij + latura_patrat/2 && x <= xmij + latura_patrat + latura_patrat/2 &&
                 y >= ymij - latura_patrat/2 && y <= ymij + latura_patrat/2)
        {
            if (ismouseclick(WM_LBUTTONDOWN))
            {

                if(contor==0)
                {

                    if(raza==20 && tab_pp[1][2]==0)
                    {
                        tab1[1][2].piesa_mica=1;
                        tab_pp[1][2]=1; /// actualizare tabla principala
                        circle (xmij + latura_patrat, ymij, raza);
                        floodfill(xmij + latura_patrat, ymij, culoare1);
                    }

                    else if(raza==35 && tab1[1][2].piesa_medie==0 && tab2[1][2].piesa_medie==0 && tab1[1][2].piesa_mare==0 && tab2[1][2].piesa_mare==0)
                    {
                        tab1[1][2].piesa_medie=2;
                        tab_pp[1][2]=2;
                        circle (xmij + latura_patrat, ymij, raza);
                        floodfill(xmij +21+ latura_patrat, ymij, culoare1);
                    }

                    else  if(raza==50 && tab1[1][2].piesa_mare!=3 && tab2[1][2].piesa_mare!=-3)
                    {
                        tab1[1][2].piesa_mare=3;
                        tab_pp[1][2]=3;
                        circle (xmij + latura_patrat, ymij, raza);
                        floodfill(xmij + latura_patrat +36, ymij, culoare1);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }

                else
                {

                    if (raza==20 && tab_pp[1][2]==0)
                    {
                        tab2[1][2].piesa_mica=-1;
                        tab_pp[1][2]=-1;
                        circle (xmij + latura_patrat, ymij, raza);
                        floodfill(xmij + latura_patrat, ymij, culoare2);

                    }

                    else if(raza==35 && tab1[1][2].piesa_medie==0 && tab2[1][2].piesa_medie==0 && tab1[1][2].piesa_mare==0 && tab2[1][2].piesa_mare==0)
                    {
                        tab2[1][2].piesa_medie=-2;
                        tab_pp[1][2]=-2;
                        circle (xmij + latura_patrat, ymij, raza);
                        floodfill(xmij +21+ latura_patrat, ymij, culoare2);

                    }

                    else if(raza==50 && tab1[1][2].piesa_mare!=3 && tab2[1][2].piesa_mare!=-3)
                    {
                        tab2[1][2].piesa_mare=-3;
                        tab_pp[1][2]=-3;
                        circle (xmij + latura_patrat, ymij, raza);
                        floodfill(xmij +36 + latura_patrat, ymij, culoare2);

                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }

                clearmouseclick(WM_LBUTTONDOWN);
                pune_piesa(culoare1, culoare2);
            }
        }


        /// patrat stanga jos - pozitia 20
        else if (x >= xmij - latura_patrat - latura_patrat/2 && x <= xmij - latura_patrat/2 &&
                 y >= ymij + latura_patrat/2 && y <= ymij + latura_patrat + latura_patrat/2)
        {
            if (ismouseclick(WM_LBUTTONDOWN))
            {
                if(contor==0)
                {

                    if(raza==20 && tab_pp[2][0]==0)
                    {
                        tab1[2][0].piesa_mica=1;
                        tab_pp[2][0]=1; /// actualizare tabla principala
                        circle (xmij - latura_patrat, ymij + latura_patrat, raza);
                        floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                    }

                    else if(raza==35 && tab1[2][0].piesa_medie==0 && tab2[2][0].piesa_medie==0 && tab1[2][0].piesa_mare==0 && tab2[2][0].piesa_mare==0)
                    {
                        tab1[2][0].piesa_medie=2;
                        tab_pp[2][0]=2;
                        circle (xmij - latura_patrat, ymij + latura_patrat, raza);
                        floodfill(xmij+21 - latura_patrat, ymij + latura_patrat, culoare1);
                    }

                    else if(raza==50 && tab1[2][0].piesa_mare!=3 && tab2[2][0].piesa_mare!=-3)
                    {
                        tab1[2][0].piesa_mare=3;
                        tab_pp[2][0]=3;
                        circle (xmij - latura_patrat, ymij + latura_patrat, raza);
                        floodfill(xmij - latura_patrat +36, ymij + latura_patrat, culoare1);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }

                else
                {

                    if (raza==20 && tab_pp[2][0]==0)
                    {
                        tab2[2][0].piesa_mica=-1;
                        tab_pp[2][0]=-1;
                        circle (xmij - latura_patrat, ymij + latura_patrat, raza);
                        floodfill(xmij - latura_patrat, ymij + latura_patrat,
                                  culoare2);
                    }

                    else if(raza==35 && tab1[2][0].piesa_medie==0 && tab2[2][0].piesa_medie==0 && tab1[2][0].piesa_mare==0 && tab2[2][0].piesa_mare==0)
                    {
                        tab2[2][0].piesa_medie=-2;
                        tab_pp[2][0]=-2;
                        circle (xmij - latura_patrat, ymij + latura_patrat, raza);
                        floodfill(xmij +21- latura_patrat, ymij + latura_patrat,

                                  culoare2);
                    }

                    else if(raza==50 && tab1[2][0].piesa_mare!=3 && tab2[2][0].piesa_mare!=-3)
                    {
                        tab2[2][0].piesa_mare=-3;
                        tab_pp[2][0]=-3;
                        circle (xmij - latura_patrat, ymij + latura_patrat, raza);
                        floodfill(xmij - latura_patrat + 36, ymij + latura_patrat,
                                  culoare2);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }
                clearmouseclick(WM_LBUTTONDOWN);
                pune_piesa(culoare1, culoare2);
            }

        }


        /// patrat mijloc jos - pozitia 21
        else if (x >= xmij - latura_patrat/2 && x <= xmij + latura_patrat/2 &&
                 y >= ymij + latura_patrat/2 && y <= ymij + latura_patrat + latura_patrat/2)
        {
            if (ismouseclick(WM_LBUTTONDOWN))
            {

                if(contor==0)
                {

                    if(raza==20 && tab_pp[2][1]==0)
                    {
                        tab1[2][1].piesa_mica=1;
                        tab_pp[2][1]=1; /// actualizare tabla principala
                        circle (xmij, ymij + latura_patrat, raza);
                        floodfill(xmij, ymij + latura_patrat, culoare1);
                    }

                    else if(raza==35  && tab1[2][1].piesa_medie==0 && tab2[2][1].piesa_medie==0 && tab1[2][1].piesa_mare==0 && tab2[2][1].piesa_mare==0)
                    {
                        tab1[2][1].piesa_medie=2;
                        tab_pp[2][1]=2;
                        circle (xmij, ymij + latura_patrat, raza);
                        floodfill(xmij+21, ymij + latura_patrat, culoare1);
                    }

                    else  if(raza==50 && tab1[2][1].piesa_mare!=3 && tab2[2][1].piesa_mare!=-3)
                    {
                        tab1[2][1].piesa_mare=3;
                        tab_pp[2][1]=3;
                        circle (xmij, ymij + latura_patrat, raza);
                        floodfill(xmij+36, ymij + latura_patrat, culoare1);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }

                else
                {

                    if (raza==20 && tab_pp[2][1]==0)
                    {
                        tab2[2][1].piesa_mica=-1;
                        tab_pp[2][1]=-1;
                        circle (xmij, ymij + latura_patrat, raza);
                        floodfill(xmij, ymij + latura_patrat,
                                  culoare2);
                    }

                    else if(raza==35  && tab1[2][1].piesa_medie==0 && tab2[2][1].piesa_medie==0 && tab1[2][1].piesa_mare==0 && tab2[2][1].piesa_mare==0)
                    {
                        tab2[2][1].piesa_medie=-2;
                        tab_pp[2][1]=-2;
                        circle (xmij, ymij + latura_patrat, raza);
                        floodfill(xmij+21, ymij + latura_patrat,
                                  culoare2);
                    }

                    else if(raza==50 && tab1[2][1].piesa_mare!=3 && tab2[2][1].piesa_mare!=-3)
                    {
                        tab2[2][1].piesa_mare=-3;
                        tab_pp[2][1]=-3;
                        circle (xmij, ymij + latura_patrat, raza);
                        floodfill(xmij + 36, ymij + latura_patrat,
                                  culoare2);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }
                clearmouseclick(WM_LBUTTONDOWN);
                pune_piesa(culoare1, culoare2);
            }
        }


        /// patrat dreapta jos - pozitia 22
       // int ok=0;
        else if (x >= xmij + latura_patrat/2 && x <= xmij + latura_patrat + latura_patrat/2 &&
                 y >= ymij + latura_patrat/2 && y <= ymij + latura_patrat + latura_patrat/2)
        {
            if (ismouseclick(WM_LBUTTONDOWN))
            {

                if(contor==0)
                {

                    if(raza==20 && tab_pp[2][2]==0)
                    {
                        tab1[2][2].piesa_mica=1;
                        tab_pp[2][2]=1; /// actualizare tabla principala
                        circle (xmij + latura_patrat, ymij + latura_patrat, raza);
                        floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);

                    }
                else  if(raza==35 && tab1[2][2].piesa_medie==0 && tab2[2][2].piesa_medie==0 && tab1[2][2].piesa_mare==0 && tab2[2][2].piesa_mare==0)
                    {
                        tab1[2][2].piesa_medie=2;
                        tab_pp[2][2]=2;
                        circle (xmij + latura_patrat, ymij + latura_patrat, raza);
                        floodfill(xmij +21+ latura_patrat, ymij + latura_patrat, culoare1);
                    }

                     else if(raza==50 && tab1[2][2].piesa_mare!=3 && tab2[2][2].piesa_mare!=-3)
                    {
                        tab1[2][2].piesa_mare=3;
                        tab_pp[2][2]=3;
                        circle (xmij + latura_patrat, ymij + latura_patrat, raza);
                        floodfill(xmij + 36 + latura_patrat, ymij + latura_patrat, culoare1);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }

                else if(contor==1)
                {
                    if (raza==20 && tab_pp[2][2]==0)
                    {
                        tab2[2][2].piesa_mica=-1;
                        tab_pp[2][2]=-1;
                        circle (xmij + latura_patrat, ymij + latura_patrat, raza);
                        floodfill(xmij + latura_patrat, ymij + latura_patrat,culoare2);
                    }
                   else  if(raza==35 && tab1[2][2].piesa_medie==0 && tab2[2][2].piesa_medie==0 && tab1[2][2].piesa_mare==0 && tab2[2][2].piesa_mare==0)
                    {
                        tab2[2][2].piesa_medie=-2;
                        tab_pp[2][2]=-2;
                        circle (xmij + latura_patrat, ymij + latura_patrat, raza);
                        floodfill(xmij +21+ latura_patrat, ymij + latura_patrat,

                                  culoare2);
                    }
                    else if(raza==50 && tab1[2][2].piesa_mare!=3 && tab2[2][2].piesa_mare!=-3)
                    {
                        tab2[2][2].piesa_mare=-3;
                        tab_pp[2][2]=-3;
                        circle (xmij + latura_patrat, ymij + latura_patrat, raza);
                        floodfill(xmij + 36 + latura_patrat, ymij + latura_patrat,
                                  culoare2);
                    }
                    else afisare_piesa_pe_tabla(contor, raza, culoare1, culoare2);
                }
                clearmouseclick(WM_LBUTTONDOWN);
                pune_piesa(culoare1, culoare2);
            }
            clearmouseclick(WM_LBUTTONDOWN);
        }

    }
    ending_window(culoare1, culoare2);
}

void pune_piesa(int culoare1, int culoare2)
{
    int h_ecran = inaltime_ecran/2 - 50;
    int lg_end=textwidth("STOP JOC");
    int x, y;
    int o_singura_alegere = 1;
    clearmouseclick(WM_LBUTTONDOWN);
    while(sfarsit_Joc() == 0)
    {
        x=mousex();
        y=mousey();
        Label(tura);
        clearmouseclick(WM_LBUTTONDOWN);
        if(y>=inaltime_ecran-100 && y<=inaltime_ecran-75 &&
                x>=latime_ecran/2-lg_end/2 && x<=latime_ecran/2+lg_end/2) /// se afla in aria butonului STOP JOC
        {
            setcolor(BLACK);
            outtextxy(latime_ecran/2-lg_end/2, inaltime_ecran-100, "STOP JOC");
            delay(60);
            if (ismouseclick(WM_LBUTTONDOWN))
            {
                for (int i = 0; i < 3; i++)
                    for (int j = 0; j < 3; j++)
                    {
                        tab_pp[i][j] = 0;
                        tab1[i][j].piesa_mare = 0;
                        tab1[i][j].piesa_medie = 0;
                        tab1[i][j].piesa_mica = 0;
                        tab2[i][j].piesa_mare = 0;
                        tab2[i][j].piesa_medie = 0;
                        tab2[i][j].piesa_mica = 0;
                    }
                main_menu();
                break;
            }
        }
        else
        {
            setcolor(WHITE);
            outtextxy(latime_ecran/2-lg_end/2, inaltime_ecran-100, "STOP JOC");
            delay(60);
        }

        ///verificare piese mici jucator 1

        setfillstyle(SOLID_FILL, MAGENTA);

        if (x>=latime_ecran/8 + 100 - 20 && x<=latime_ecran/8 + 100 + 20 &&
                y>= h_ecran - 155 - 20 && y<= h_ecran - 5 - 70 - 10 - 40 - 10 - 20 + 20 && getpixel(x, y)!=MAGENTA)
        {

            if (ismouseclick(WM_LBUTTONDOWN) && o_singura_alegere && tura % 2 == 0)
            {
                floodfill(latime_ecran/8 + 100, h_ecran - 5 - 70 - 10 - 40 - 10 - 20, WHITE);
                setcolor(MAGENTA);
                circle(latime_ecran/8 + 100, h_ecran - 5 - 70 - 10 - 40 - 10 - 20, 20);
                o_singura_alegere = 0;
                tura++;
                afisare_piesa_pe_tabla(0, 20, culoare1, culoare2);
            }
        }

        else if(x >= latime_ecran/8 + 100 - 20 && x <= latime_ecran/8 + 100 + 20 &&
                y >= h_ecran - 105 - 20 && y <= h_ecran - 105 + 20 && getpixel(x, y)!=MAGENTA)
        {
            if (ismouseclick(WM_LBUTTONDOWN) && o_singura_alegere && tura % 2 == 0)
            {
                floodfill(latime_ecran/8 + 100, h_ecran - 5 - 70 - 10 - 20, WHITE);
                setcolor(MAGENTA);
                circle(latime_ecran/8 + 100, h_ecran - 5 - 70 - 10 - 20, 20);
                o_singura_alegere = 0;
                tura++;
                afisare_piesa_pe_tabla(0, 20, culoare1, culoare2);
            }
        }

        ///verificare piese medii jucator 1

        else if (x >= latime_ecran/8 + 100 - 35 && x <= latime_ecran/8 + 100 + 35 &&
                 y >= h_ecran - 40 - 35 && y <= h_ecran - 40 + 35 && getpixel(x, y)!=MAGENTA)
        {
            if (ismouseclick(WM_LBUTTONDOWN) && o_singura_alegere && tura % 2 == 0)
            {
                floodfill(latime_ecran/8 + 100, h_ecran - 5 - 35, WHITE );
                setcolor(MAGENTA);
                circle(latime_ecran/8 + 100, h_ecran - 5 - 35, 35);
                o_singura_alegere = 0;
                tura++;
                afisare_piesa_pe_tabla(0, 35, culoare1, culoare2);
            }
        }

        else if (x >= latime_ecran/8 + 100 - 35 && x <= latime_ecran/8 + 100 + 35 &&
                 y >= h_ecran + 40 - 35 && y <= h_ecran + 40 + 35 && getpixel(x, y)!=MAGENTA)
        {
            if (ismouseclick(WM_LBUTTONDOWN) && o_singura_alegere && tura % 2 == 0)
            {
                floodfill(latime_ecran/8 + 100, h_ecran + 5 + 35, WHITE );
                setcolor(MAGENTA);
                circle(latime_ecran/8 + 100, h_ecran + 5 + 35, 35);
                o_singura_alegere = 0;
                tura++;
                afisare_piesa_pe_tabla(0, 35, culoare1, culoare2);
            }
        }

        /// verificare piese mari jucator 1

        else if (x >= latime_ecran/8 + 100 - 50 && x <= latime_ecran/8 + 100 + 50 &&
                 y >= h_ecran + 135 - 50 && y <= h_ecran + 135 + 50 && getpixel(x, y)!=MAGENTA)
        {
            if (ismouseclick(WM_LBUTTONDOWN) && o_singura_alegere && tura % 2 == 0)
            {
                floodfill(latime_ecran/8 + 100, h_ecran + 5 + 70 + 10 + 50, WHITE );
                setcolor(MAGENTA);
                circle(latime_ecran/8 + 100, h_ecran + 5 + 70 + 10 + 50, 50);
                o_singura_alegere = 0;
                tura++;
                afisare_piesa_pe_tabla(0, 50, culoare1, culoare2);
            }
        }

        else if (x >= latime_ecran/8 + 100 - 50 && x <= latime_ecran/8 + 100 + 50 &&
                 y >= h_ecran + 245 - 50 && y <= h_ecran + 245 + 50 && getpixel(x, y)!=MAGENTA)
        {
            if (ismouseclick(WM_LBUTTONDOWN) && o_singura_alegere &&  tura % 2 == 0)
            {
                floodfill(latime_ecran/8 + 100, h_ecran+ 5 + 70 + 10 + 100 + 10 + 50, WHITE );
                setcolor(MAGENTA);
                circle(latime_ecran/8 + 100, h_ecran+ 5 + 70 + 10 + 100 + 10 + 50, 50);
                o_singura_alegere = 0;
                tura++;
                afisare_piesa_pe_tabla(0, 50, culoare1, culoare2);
            }
        }

        /// verificare piese mici jucator 2

        else if (x >= latime_ecran/2+latime_ecran/4 + 75 - 20 && x <= latime_ecran/2+latime_ecran/4 + 75 + 20 &&
                 y>= h_ecran - 155 - 20 && y<= h_ecran - 5 - 70 - 10 - 40 - 10 - 20 + 20 && getpixel(x, y)!=MAGENTA)
        {
            if (ismouseclick(WM_LBUTTONDOWN) && o_singura_alegere && tura % 2 == 1)
            {
                floodfill(latime_ecran/2+latime_ecran/4 + 75, h_ecran - 5 - 70 - 10 - 40 - 10 - 20, WHITE );
                setcolor(MAGENTA);
                circle(latime_ecran/2+latime_ecran/4 + 75, h_ecran - 5 - 70 - 10 - 40 - 10 - 20, 20);
                o_singura_alegere = 0;
                tura++;
                afisare_piesa_pe_tabla(1, 20, culoare1, culoare2);
            }
        }

        else if (x >= latime_ecran/2 + latime_ecran/4 + 75 - 20 && x <= latime_ecran/2 + latime_ecran/4 + 75 + 20 &&
                 y >= h_ecran - 105 - 20 && y <= h_ecran - 105 + 20 && getpixel(x, y)!=MAGENTA)
        {
            if (ismouseclick(WM_LBUTTONDOWN) && o_singura_alegere && tura % 2 == 1)
            {
                floodfill(latime_ecran/2+latime_ecran/4 + 75, h_ecran - 5 - 70 - 10 - 20, WHITE );
                setcolor(MAGENTA);
                circle(latime_ecran/2+latime_ecran/4 + 75, h_ecran - 5 - 70 - 10 - 20, 20);
                o_singura_alegere = 0;
                tura++;
                afisare_piesa_pe_tabla(1, 20, culoare1,culoare2);
            }
        }

        /// verificare piese medii jucator 2

        else if (x >= latime_ecran/2 + latime_ecran/4 + 75 - 35 && x <= latime_ecran/2 + latime_ecran/4 + 75 + 35 &&
                 y >= h_ecran - 40 - 35 && y <= h_ecran - 40 + 35 && getpixel(x, y)!=MAGENTA)
        {
            if (ismouseclick(WM_LBUTTONDOWN) && o_singura_alegere && tura % 2 == 1)
            {
                floodfill(latime_ecran/2+latime_ecran/4 + 75, h_ecran - 5 - 35, WHITE );
                setcolor(MAGENTA);
                circle(latime_ecran/2+latime_ecran/4 + 75, h_ecran - 5 - 35, 35);
                o_singura_alegere = 0;
                tura++;
                afisare_piesa_pe_tabla(1, 35, culoare1, culoare2);
            }
        }

        else if (x >= latime_ecran/2 + latime_ecran/4 + 75 - 35 && x <= latime_ecran/2 + latime_ecran/4 + 75 + 35 &&
                 y >= h_ecran + 40 - 35 && y <= h_ecran + 40 + 35 && getpixel(x, y)!=MAGENTA)
        {
            if (ismouseclick(WM_LBUTTONDOWN) && o_singura_alegere && tura % 2 == 1)
            {
                floodfill(latime_ecran/2+latime_ecran/4 + 75, h_ecran + 5 + 35, WHITE );
                setcolor(MAGENTA);
                circle(latime_ecran/2+latime_ecran/4 + 75, h_ecran + 5 + 35, 35);
                o_singura_alegere = 0;
                tura++;
                afisare_piesa_pe_tabla(1, 35, culoare1, culoare2);
            }
        }

        /// verificare piese mari jucator 2

        else if (x >= latime_ecran/2 + latime_ecran/4 + 75 - 50 && x <= latime_ecran/2 + latime_ecran/4 + 75 + 50 &&
                 y >= h_ecran + 135 - 50 && y <= h_ecran + 135 + 50 && getpixel(x, y)!=MAGENTA)
        {
            if (ismouseclick(WM_LBUTTONDOWN) && o_singura_alegere && tura % 2 == 1)
            {
                floodfill(latime_ecran/2+latime_ecran/4 + 75, h_ecran + 5 + 70 + 10 + 50, WHITE );
                setcolor(MAGENTA);
                circle(latime_ecran/2+latime_ecran/4 + 75, h_ecran + 5 + 70 + 10 + 50, 50);
                o_singura_alegere = 0;
                tura++;
                afisare_piesa_pe_tabla(1, 50, culoare1, culoare2);
            }
        }

        else if (x >= latime_ecran/2 + latime_ecran/4 + 75 - 50 && x <= latime_ecran/2 + latime_ecran/4 + 75 + 50 &&
                 y >= h_ecran + 245 - 50 && y <= h_ecran + 245 + 50 && getpixel(x, y)!=MAGENTA)
        {
            if (ismouseclick(WM_LBUTTONDOWN) && o_singura_alegere && tura % 2 == 1)
            {
                floodfill(latime_ecran/2+latime_ecran/4 + 75, h_ecran+ 5 + 70 + 10 + 100 + 10 + 50, WHITE );
                setcolor(MAGENTA);
                circle(latime_ecran/2+latime_ecran/4 + 75, h_ecran+ 5 + 70 + 10 + 100 + 10 + 50, 50);
                o_singura_alegere = 0;
                tura++;
                afisare_piesa_pe_tabla(1, 50,culoare1, culoare2);
            }
        }

        ///selectarea pieselor de pe tabla si suprapunerea lor
        int ok;
        int poz1, poz2;  ///coordonate pt al doilea click

        if (x >= xmij - latura_patrat/2 && x <= xmij + latura_patrat/2 &&
                y >= ymij - latura_patrat - latura_patrat/2 && y <= ymij - latura_patrat/2)/// am selecatat piesa din pozitia 01 in matrice
        {
            if (ismouseclick(WM_LBUTTONDOWN) == 1)
            {
                if (tab_pp[0][1] == 1 && tura % 2 == 0) ///pe poz 01 se afla piesa mica jucator 1
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij - latura_patrat, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 00 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] == 0)
                            {
                                ok = 1;
                                tab_pp[0][0] = 1;
                                tab_pp[0][1] = 0;
                                tab1[0][0].piesa_mica=1;
                                tab1[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if (poz1>= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][2] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][2] = 1;
                                tab_pp[0][1] = 0;
                                tab1[0][2].piesa_mica=1;
                                tab1[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = 1;
                                tab_pp[0][1] = 0;
                                tab1[1][0].piesa_mica=1;
                                tab1[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = 1;
                                tab_pp[0][1] = 0;
                                tab1[1][1].piesa_mica=1;
                                tab1[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = 1;
                                tab_pp[0][1] = 0;
                                tab1[1][2].piesa_mica=1;
                                tab1[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = 1;
                                tab_pp[0][1] = 0;
                                tab1[2][0].piesa_mica=1;
                                tab1[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = 1;
                                tab_pp[0][1] = 0;
                                tab1[2][1].piesa_mica=1;
                                tab1[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = 1;
                                tab_pp[0][1] = 0;
                                tab1[2][2].piesa_mica=1;
                                tab1[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }
                }

                ///pe pozitia 01 in matrice se afla o piesa medie a jucatorului 1

                else if(tab_pp[0][1]==2 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij - latura_patrat, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 00 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab1[0][0].piesa_medie=2;
                                tab1[0][1].piesa_medie=0;
                                tab_pp[0][0] = 2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 1;
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice
                        else if (poz1>= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 2;
                                tab1[0][2].piesa_medie=2;
                                tab1[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 1;
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 2;
                                tab1[1][0].piesa_medie=2;
                                tab1[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 1;
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 2;
                                tab1[1][1].piesa_medie=2;
                                tab1[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 1;
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 2;
                                tab1[1][2].piesa_medie=2;
                                tab1[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 1;
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 2;
                                tab1[2][0].piesa_medie=2;
                                tab1[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 1;
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 2;
                                tab1[2][1].piesa_medie=2;
                                tab1[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 1;
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 2;
                                tab1[2][2].piesa_medie=2;
                                tab1[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 1;
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                ///pe pozitia 01 in matrice se afla o piesa mare a jucatorului 1

                else if(tab_pp[0][1]==3 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij - latura_patrat, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 00 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=3 && tab_pp[0][0] !=-3)
                            {
                                ok = 1;
                                tab1[0][0].piesa_mare=3;
                                tab1[0][1].piesa_mare=0;
                                tab_pp[0][0] = 3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice
                        else if (poz1>= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 3;
                                tab1[0][2].piesa_mare=3;
                                tab1[0][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 3;
                                tab1[1][0].piesa_mare=3;
                                tab1[0][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 3;
                                tab1[1][1].piesa_mare=3;
                                tab1[0][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 3;
                                tab1[1][2].piesa_mare=3;
                                tab1[0][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 3;
                                tab1[2][0].piesa_mare=3;
                                tab1[0][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 3;
                                tab1[2][1].piesa_mare=3;
                                tab1[0][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 3;
                                tab1[2][2].piesa_mare=3;
                                tab1[0][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }

                else if (tab_pp[0][1] == -1 && tura % 2 == 1) /// piesa mica, pozitia 01, jucator 2
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij - latura_patrat, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 00 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] == 0)
                            {
                                ok = 1;
                                tab_pp[0][0] = -1;
                                tab_pp[0][1] = 0;
                                tab2[0][0].piesa_mica=-1;
                                tab2[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if (poz1>= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][2] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][2] = -1;
                                tab_pp[0][1] = 0;
                                tab2[0][2].piesa_mica=-1;
                                tab2[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = -1;
                                tab_pp[0][1] = 0;
                                tab2[1][0].piesa_mica=-1;
                                tab2[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = -1;
                                tab_pp[0][1] = 0;
                                tab2[1][1].piesa_mica=-1;
                                tab2[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = -1;
                                tab_pp[0][1] = 0;
                                tab2[1][2].piesa_mica=-1;
                                tab2[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = -1;
                                tab_pp[0][1] = 0;
                                tab2[2][0].piesa_mica=-1;
                                tab2[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = -1;
                                tab_pp[0][1] = 0;
                                tab2[2][1].piesa_mica=-1;
                                tab2[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = -1;
                                tab_pp[0][1] = 0;
                                tab2[2][2].piesa_mica=-1;
                                tab2[0][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }
                }

                else if(tab_pp[0][1]==-2 && tura % 2 == 1) /// piesa medie, pozitia 01, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij - latura_patrat, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 00 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab2[0][0].piesa_medie=-2;
                                tab2[0][1].piesa_medie=0;
                                tab_pp[0][0] = -2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice
                        else if (poz1>= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -2;
                                tab2[0][2].piesa_medie=-2;
                                tab2[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -2;
                                tab2[1][0].piesa_medie=-2;
                                tab2[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -2;
                                tab2[1][1].piesa_medie=-2;
                                tab2[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -2;
                                tab2[1][2].piesa_medie=-2;
                                tab2[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -2;
                                tab2[2][0].piesa_medie=-2;
                                tab2[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -2;
                                tab2[2][1].piesa_medie=-2;
                                tab2[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -2;
                                tab2[2][2].piesa_medie=-2;
                                tab2[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                else if(tab_pp[0][1]==-3 && tura % 2 == 1) /// piesa mare, pozitia 01, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij - latura_patrat, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 00 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=3 && tab_pp[0][0] !=-3)
                            {
                                ok = 1;
                                tab2[0][0].piesa_mare=-3;
                                tab2[0][1].piesa_mare=0;
                                tab_pp[0][0] = -3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice
                        else if (poz1>= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -3;
                                tab2[0][2].piesa_mare=-3;
                                tab2[0][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -3;
                                tab2[1][0].piesa_mare=-3;
                                tab2[0][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -3;
                                tab2[1][1].piesa_mare=-3;
                                tab2[0][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -3;
                                tab2[1][2].piesa_mare=-3;
                                tab2[0][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -3;
                                tab2[2][0].piesa_mare=-3;
                                tab2[0][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -3;
                                tab2[2][1].piesa_mare=-3;
                                tab2[0][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -3;
                                tab2[2][2].piesa_mare=-3;
                                tab2[0][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][1] = 2;
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_medie == -2)
                                {
                                    tab_pp[0][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 35);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][1].piesa_mica == 1)
                                {
                                    tab_pp[0][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][1].piesa_mica == -1)
                                {
                                    tab_pp[0][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij - latura_patrat, 20);
                                    floodfill(xmij, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][1]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }
            }
            clearmouseclick(WM_LBUTTONDOWN);
        }

        else if (x >= xmij - latura_patrat - latura_patrat/2 && x <= xmij - latura_patrat/2 &&
                 y >= ymij - latura_patrat - latura_patrat/2 && y <= ymij - latura_patrat/2)/// am selecatat piesa din pozitia 00 in matrice
        {
            if (ismouseclick(WM_LBUTTONDOWN) == 1)
            {
                if (tab_pp[0][0] == 1 && tura % 2 == 0) ///pe poz 00 se afla piesa mica jucator 1
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij - latura_patrat, ymij - latura_patrat, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = 1;
                                tab_pp[0][0] = 0;
                                tab1[0][1].piesa_mica=1;
                                tab1[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if (poz1>= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][2] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][2] = 1;
                                tab_pp[0][0] = 0;
                                tab1[0][2].piesa_mica=1;
                                tab1[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = 1;
                                tab_pp[0][0] = 0;
                                tab1[1][0].piesa_mica=1;
                                tab1[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = 1;
                                tab_pp[0][0] = 0;
                                tab1[1][1].piesa_mica=1;
                                tab1[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = 1;
                                tab_pp[0][0] = 0;
                                tab1[1][2].piesa_mica=1;
                                tab1[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = 1;
                                tab_pp[0][0] = 0;
                                tab1[2][0].piesa_mica=1;
                                tab1[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = 1;
                                tab_pp[0][0] = 0;
                                tab1[2][1].piesa_mica=1;
                                tab1[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = 1;
                                tab_pp[0][0] = 0;
                                tab1[2][2].piesa_mica=1;
                                tab1[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }

                }

                ///pe pozitia 00 in matrice se afla o piesa medie a jucatorului 1

                else if(tab_pp[0][0]==2 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij - latura_patrat, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_medie=2;
                                tab1[0][0].piesa_medie=0;
                                tab_pp[0][1] = 2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 1;
                                    circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice
                        else if (poz1>= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 2;
                                tab1[0][2].piesa_medie=2;
                                tab1[0][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setcolor(culoare1);
                                setfillstyle(SOLID_FILL, culoare1);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 1;
                                    circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 2;
                                tab1[1][0].piesa_medie=2;
                                tab1[0][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 1;
                                    circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 2;
                                tab1[1][1].piesa_medie=2;
                                tab1[0][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 1;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 2;
                                tab1[1][2].piesa_medie=2;
                                tab1[0][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 1;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 2;
                                tab1[2][0].piesa_medie=2;
                                tab1[0][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 1;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 2;
                                tab1[2][1].piesa_medie=2;
                                tab1[0][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 1;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 2;
                                tab1[2][2].piesa_medie=2;
                                tab1[0][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 1;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                ///pe pozitia 00 in matrice se afla o piesa mare a jucatorului 1

                else if(tab_pp[0][0]==3 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij - latura_patrat, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_mare=3;
                                tab1[0][0].piesa_mare=0;
                                tab_pp[0][1] = 3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice
                        else if (poz1>= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 3;
                                tab1[0][2].piesa_mare=3;
                                tab1[0][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 3;
                                tab1[1][0].piesa_mare=3;
                                tab1[0][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 3;
                                tab1[1][1].piesa_mare=3;
                                tab1[0][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 3;
                                tab1[1][2].piesa_mare=3;
                                tab1[0][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 3;
                                tab1[2][0].piesa_mare=3;
                                tab1[0][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 3;
                                tab1[2][1].piesa_mare=3;
                                tab1[0][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 3;
                                tab1[2][2].piesa_mare=3;
                                tab1[0][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }

                else if (tab_pp[0][0] == -1 && tura % 2 == 1) /// piesa mica, pozitia 01, jucator 2
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij - latura_patrat, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = -1;
                                tab_pp[0][0] = 0;
                                tab2[0][1].piesa_mica=-1;
                                tab2[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if (poz1>= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][2] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][2] = -1;
                                tab_pp[0][0] = 0;
                                tab2[0][2].piesa_mica=-1;
                                tab2[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = -1;
                                tab_pp[0][0] = 0;
                                tab2[1][0].piesa_mica=-1;
                                tab2[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = -1;
                                tab_pp[0][0] = 0;
                                tab2[1][1].piesa_mica=-1;
                                tab2[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = -1;
                                tab_pp[0][0] = 0;
                                tab2[1][2].piesa_mica=-1;
                                tab2[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = -1;
                                tab_pp[0][0] = 0;
                                tab2[2][0].piesa_mica=-1;
                                tab2[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = -1;
                                tab_pp[0][0] = 0;
                                tab2[2][1].piesa_mica=-1;
                                tab2[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = -1;
                                tab_pp[0][0] = 0;
                                tab2[2][2].piesa_mica=-1;
                                tab2[0][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }
                }

                else if(tab_pp[0][0]==-2 && tura % 2 == 1) /// piesa medie, pozitia 01, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij - latura_patrat, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_medie=-2;
                                tab2[0][0].piesa_medie=0;
                                tab_pp[0][1] = -2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice
                        else if (poz1>= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -2;
                                tab2[0][2].piesa_medie=-2;
                                tab2[0][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -2;
                                tab2[1][0].piesa_medie=-2;
                                tab2[0][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -2;
                                tab2[1][1].piesa_medie=-2;
                                tab2[0][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -2;
                                tab2[1][2].piesa_medie=-2;
                                tab2[0][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -2;
                                tab2[2][0].piesa_medie=-2;
                                tab2[0][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -2;
                                tab2[2][1].piesa_medie=-2;
                                tab2[0][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -2;
                                tab2[2][2].piesa_medie=-2;
                                tab2[0][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                else if(tab_pp[0][0]==-3 && tura % 2 == 1) /// piesa mare, pozitia 01, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij - latura_patrat, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_mare=-3;
                                tab2[0][0].piesa_mare=0;
                                tab_pp[0][1] = -3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice
                        else if (poz1>= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -3;
                                tab2[0][2].piesa_mare=-3;
                                tab2[0][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -3;
                                tab2[1][0].piesa_mare=-3;
                                tab2[0][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -3;
                                tab2[1][1].piesa_mare=-3;
                                tab2[0][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -3;
                                tab2[1][2].piesa_mare=-3;
                                tab2[0][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -3;
                                tab2[2][0].piesa_mare=-3;
                                tab2[0][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -3;
                                tab2[2][1].piesa_mare=-3;
                                tab2[0][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -3;
                                tab2[2][2].piesa_mare=-3;
                                tab2[0][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][0] = 2;
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_medie == -2)
                                {
                                    tab_pp[0][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][0].piesa_mica == 1)
                                {
                                    tab_pp[0][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][0].piesa_mica == -1)
                                {
                                    tab_pp[0][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][0]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }
            }
            clearmouseclick(WM_LBUTTONDOWN);
        }

        else if (x >= xmij + latura_patrat/2 && x <= xmij + latura_patrat + latura_patrat/2 &&
                 y >= ymij - latura_patrat - latura_patrat/2 && y <= ymij - latura_patrat/2)/// am selecatat piesa din pozitia 02 in matrice
        {
            if (ismouseclick(WM_LBUTTONDOWN) == 1)
            {
                if (tab_pp[0][2] == 1 && tura % 2 == 0) ///pe poz 02 se afla piesa mica jucator 1
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij + latura_patrat, ymij - latura_patrat, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = 1;
                                tab_pp[0][2] = 0;
                                tab1[0][1].piesa_mica=1;
                                tab1[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 00 in matrice (pozitie libera)
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][0] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][0] = 1;
                                tab_pp[0][2] = 0;
                                tab1[0][0].piesa_mica=1;
                                tab1[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = 1;
                                tab_pp[0][2] = 0;
                                tab1[1][0].piesa_mica=1;
                                tab1[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = 1;
                                tab_pp[0][2] = 0;
                                tab1[1][1].piesa_mica=1;
                                tab1[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = 1;
                                tab_pp[0][2] = 0;
                                tab1[1][2].piesa_mica=1;
                                tab1[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = 1;
                                tab_pp[0][2] = 0;
                                tab1[2][0].piesa_mica=1;
                                tab1[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = 1;
                                tab_pp[0][2] = 0;
                                tab1[2][1].piesa_mica=1;
                                tab1[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = 1;
                                tab_pp[0][2] = 0;
                                tab1[2][2].piesa_mica=1;
                                tab1[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }

                }

                ///pe pozitia 02 in matrice se afla o piesa medie a jucatorului 1

                else if(tab_pp[0][2]==2 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij - latura_patrat, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_medie=2;
                                tab1[0][2].piesa_medie=0;
                                tab_pp[0][1] = 2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 1;
                                    circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = 2;
                                tab1[0][0].piesa_medie=2;
                                tab1[0][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 1;
                                    circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 2;
                                tab1[1][0].piesa_medie=2;
                                tab1[0][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 1;
                                    circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 2;
                                tab1[1][1].piesa_medie=2;
                                tab1[0][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 1;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 2;
                                tab1[1][2].piesa_medie=2;
                                tab1[0][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 1;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 2;
                                tab1[2][0].piesa_medie=2;
                                tab1[0][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 1;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 2;
                                tab1[2][1].piesa_medie=2;
                                tab1[0][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 1;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 2;
                                tab1[2][2].piesa_medie=2;
                                tab1[0][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 1;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                ///pe pozitia 02 in matrice se afla o piesa mare a jucatorului 1

                else if(tab_pp[0][2]==3 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij - latura_patrat, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_mare=3;
                                tab1[0][2].piesa_mare=0;
                                tab_pp[0][1] = 3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = 3;
                                tab1[0][0].piesa_mare=3;
                                tab1[0][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 3;
                                tab1[1][0].piesa_mare=3;
                                tab1[0][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 3;
                                tab1[1][1].piesa_mare=3;
                                tab1[0][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 3;
                                tab1[1][2].piesa_mare=3;
                                tab1[0][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 3;
                                tab1[2][0].piesa_mare=3;
                                tab1[0][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 3;
                                tab1[2][1].piesa_mare=3;
                                tab1[0][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 3;
                                tab1[2][2].piesa_mare=3;
                                tab1[0][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }

                else if (tab_pp[0][2] == -1 && tura % 2 == 1) /// piesa mica, pozitia 02 jucator 2
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij - latura_patrat, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = -1;
                                tab_pp[0][2] = 0;
                                tab2[0][1].piesa_mica=-1;
                                tab2[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 00 in matrice (pozitie libera)
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][0] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][0] = -1;
                                tab_pp[0][2] = 0;
                                tab2[0][0].piesa_mica=-1;
                                tab2[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = -1;
                                tab_pp[0][2] = 0;
                                tab2[1][0].piesa_mica=-1;
                                tab2[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = -1;
                                tab_pp[0][2] = 0;
                                tab2[1][1].piesa_mica=-1;
                                tab2[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = -1;
                                tab_pp[0][2] = 0;
                                tab2[1][2].piesa_mica=-1;
                                tab2[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = -1;
                                tab_pp[0][2] = 0;
                                tab2[2][0].piesa_mica=-1;
                                tab2[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = -1;
                                tab_pp[0][2] = 0;
                                tab2[2][1].piesa_mica=-1;
                                tab2[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = -1;
                                tab_pp[0][2] = 0;
                                tab2[2][2].piesa_mica=-1;
                                tab2[0][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }
                }

                else if(tab_pp[0][2]==-2 && tura % 2 == 1) /// piesa medie, pozitia 02, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij - latura_patrat, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_medie=-2;
                                tab2[0][2].piesa_medie=0;
                                tab_pp[0][1] = -2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = -2;
                                tab2[0][0].piesa_medie=-2;
                                tab2[0][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -2;
                                tab2[1][0].piesa_medie=-2;
                                tab2[0][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -2;
                                tab2[1][1].piesa_medie=-2;
                                tab2[0][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -2;
                                tab2[1][2].piesa_medie=-2;
                                tab2[0][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -2;
                                tab2[2][0].piesa_medie=-2;
                                tab2[0][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -2;
                                tab2[2][1].piesa_medie=-2;
                                tab2[0][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -2;
                                tab2[2][2].piesa_medie=-2;
                                tab2[0][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                else if(tab_pp[0][2]==-3 && tura % 2 == 1) /// piesa mare, pozitia 02, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij - latura_patrat, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_mare=-3;
                                tab2[0][2].piesa_mare=0;
                                tab_pp[0][1] = -3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = -3;
                                tab2[0][0].piesa_mare=-3;
                                tab2[0][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -3;
                                tab2[1][0].piesa_mare=-3;
                                tab2[0][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -3;
                                tab2[1][1].piesa_mare=-3;
                                tab2[0][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij - latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij-latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij-latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij-latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij-latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij-latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij-latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -3;
                                tab2[1][2].piesa_mare=-3;
                                tab2[0][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -3;
                                tab2[2][0].piesa_mare=-3;
                                tab2[0][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -3;
                                tab2[2][1].piesa_mare=-3;
                                tab2[0][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -3;
                                tab2[2][2].piesa_mare=-3;
                                tab2[0][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[0][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[0][2] = 2;
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_medie == -2)
                                {
                                    tab_pp[0][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else if(tab1[0][2].piesa_mica == 1)
                                {
                                    tab_pp[0][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare1);
                                }
                                else if(tab2[0][2].piesa_mica == -1)
                                {
                                    tab_pp[0][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij - latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij - latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[0][2]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }
            }
            clearmouseclick(WM_LBUTTONDOWN);
        }

        else if (x >= xmij - latura_patrat/2 - latura_patrat && x <= xmij - latura_patrat/2 &&
                 y >= ymij - latura_patrat/2 && y <= ymij + latura_patrat/2)/// am selecatat piesa din pozitia 10 in matrice
        {
            if (ismouseclick(WM_LBUTTONDOWN) == 1)
            {
                if (tab_pp[1][0] == 1 && tura % 2 == 0) ///pe poz 00 se afla piesa mica jucator 1
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij - latura_patrat, ymij, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = 1;
                                tab_pp[1][0] = 0;
                                tab1[0][1].piesa_mica=1;
                                tab1[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 00 in matrice (pozitie libera)
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][0] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][0] = 1;
                                tab_pp[1][0] = 0;
                                tab1[0][0].piesa_mica=1;
                                tab1[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] == 0)
                            {
                                ok = 1;
                                tab_pp[0][2] = 1;
                                tab_pp[1][0] = 0;
                                tab1[0][2].piesa_mica=1;
                                tab1[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij-latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij-latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = 1;
                                tab_pp[1][0] = 0;
                                tab1[1][1].piesa_mica=1;
                                tab1[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = 1;
                                tab_pp[1][0] = 0;
                                tab1[1][2].piesa_mica=1;
                                tab1[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = 1;
                                tab_pp[1][0] = 0;
                                tab1[2][0].piesa_mica=1;
                                tab1[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = 1;
                                tab_pp[1][0] = 0;
                                tab1[2][1].piesa_mica=1;
                                tab1[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = 1;
                                tab_pp[1][0] = 0;
                                tab1[2][2].piesa_mica=1;
                                tab1[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }

                }

                ///pe pozitia 10 in matrice se afla o piesa medie a jucatorului 1

                else if(tab_pp[1][0]==2 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_medie=2;
                                tab1[1][0].piesa_medie=0;
                                tab_pp[0][1] = 2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 1;
                                    circle (xmij - latura_patrat, ymij, 20);
                                    floodfill(xmij - latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij - latura_patrat, ymij, 20);
                                    floodfill(xmij - latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = 2;
                                tab1[0][0].piesa_medie=2;
                                tab1[1][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 1;
                                    circle (xmij - latura_patrat, ymij, 20);
                                    floodfill(xmij - latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij - latura_patrat, ymij, 20);
                                    floodfill(xmij - latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 2;
                                tab1[0][2].piesa_medie=2;
                                tab1[1][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 1;
                                    circle (xmij - latura_patrat, ymij, 20);
                                    floodfill(xmij - latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij - latura_patrat, ymij, 20);
                                    floodfill(xmij - latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 2;
                                tab1[1][1].piesa_medie=2;
                                tab1[1][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 1;
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 2;
                                tab1[1][2].piesa_medie=2;
                                tab1[1][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 1;
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 2;
                                tab1[2][0].piesa_medie=2;
                                tab1[1][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 1;
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 2;
                                tab1[2][1].piesa_medie=2;
                                tab1[1][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 1;
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 2;
                                tab1[2][2].piesa_medie=2;
                                tab1[1][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 1;
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                ///pe pozitia 10 in matrice se afla o piesa mare a jucatorului 1

                else if(tab_pp[1][0]==3 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_mare=3;
                                tab1[1][0].piesa_mare=0;
                                tab_pp[0][1] = 3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij - latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = 3;
                                tab1[0][0].piesa_mare=3;
                                tab1[1][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 3;
                                tab1[0][2].piesa_mare=3;
                                tab1[1][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij-latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij-latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 3;
                                tab1[1][1].piesa_mare=3;
                                tab1[1][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 3;
                                tab1[1][2].piesa_mare=3;
                                tab1[1][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 3;
                                tab1[2][0].piesa_mare=3;
                                tab1[1][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 3;
                                tab1[2][1].piesa_mare=3;
                                tab1[1][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 3;
                                tab1[2][2].piesa_mare=3;
                                tab1[1][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }

                else if (tab_pp[1][0] == -1 && tura % 2 == 1) /// piesa mica, pozitia 10 jucator 2
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = -1;
                                tab_pp[1][0] = 0;
                                tab2[0][1].piesa_mica=-1;
                                tab2[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 00 in matrice (pozitie libera)
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][0] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][0] = -1;
                                tab_pp[1][0] = 0;
                                tab2[0][0].piesa_mica=-1;
                                tab2[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij - latura_patrat/2 - latura_patrat)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] == 0)
                            {
                                ok = 1;
                                tab_pp[0][2] = -1;
                                tab_pp[1][0] = 0;
                                tab2[0][2].piesa_mica=-1;
                                tab2[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = -1;
                                tab_pp[1][0] = 0;
                                tab2[1][1].piesa_mica=-1;
                                tab2[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = -1;
                                tab_pp[1][0] = 0;
                                tab2[1][2].piesa_mica=-1;
                                tab2[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = -1;
                                tab_pp[1][0] = 0;
                                tab2[2][0].piesa_mica=-1;
                                tab2[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = -1;
                                tab_pp[1][0] = 0;
                                tab2[2][1].piesa_mica=-1;
                                tab2[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = -1;
                                tab_pp[1][0] = 0;
                                tab2[2][2].piesa_mica=-1;
                                tab2[1][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }
                }

                else if(tab_pp[1][0]==-2 && tura % 2 == 1) /// piesa medie, pozitia 10, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_medie=-2;
                                tab2[1][0].piesa_medie=0;
                                tab_pp[0][1] = -2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = -2;
                                tab2[0][0].piesa_medie=-2;
                                tab2[1][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -2;
                                tab2[0][2].piesa_medie=-2;
                                tab2[1][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -2;
                                tab2[1][1].piesa_medie=-2;
                                tab2[1][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);


                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -2;
                                tab2[1][2].piesa_medie=-2;
                                tab2[1][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -2;
                                tab2[2][0].piesa_medie=-2;
                                tab2[1][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -2;
                                tab2[2][1].piesa_medie=-2;
                                tab2[1][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -2;
                                tab2[2][2].piesa_medie=-2;
                                tab2[1][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);


                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                else if(tab_pp[1][0]==-3 && tura % 2 == 1) /// piesa mare, pozitia 10, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_mare=-3;
                                tab2[1][0].piesa_mare=0;
                                tab_pp[0][1] = -3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = -3;
                                tab2[0][0].piesa_mare=-3;
                                tab2[1][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -3;
                                tab2[0][2].piesa_mare=-3;
                                tab2[1][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -3;
                                tab2[1][1].piesa_mare=-3;
                                tab2[1][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -3;
                                tab2[1][2].piesa_mare=-3;
                                tab2[1][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -3;
                                tab2[2][0].piesa_mare=-3;
                                tab2[1][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -3;
                                tab2[2][1].piesa_mare=-3;
                                tab2[1][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -3;
                                tab2[2][2].piesa_mare=-3;
                                tab2[1][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][0] = 2;
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_medie == -2)
                                {
                                    tab_pp[1][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 35);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][0].piesa_mica == 1)
                                {
                                    tab_pp[1][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][0].piesa_mica == -1)
                                {
                                    tab_pp[1][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij, 20);
                                    floodfill(xmij-latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][0]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }
            }
            clearmouseclick(WM_LBUTTONDOWN);
        }

        else if (x >= xmij - latura_patrat/2 && x <= xmij + latura_patrat/2 &&
                 y >= ymij - latura_patrat/2 && y <= ymij + latura_patrat/2)/// am selecatat piesa din pozitia 11 in matrice
        {
            if (ismouseclick(WM_LBUTTONDOWN) == 1)
            {
                if (tab_pp[1][1] == 1 && tura % 2 == 0) ///pe poz 11 se afla piesa mica jucator 1
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = 1;
                                tab_pp[1][1] = 0;
                                tab1[0][1].piesa_mica=1;
                                tab1[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 00 in matrice (pozitie libera)
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][0] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][0] = 1;
                                tab_pp[1][1] = 0;
                                tab1[0][0].piesa_mica=1;
                                tab1[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] == 0)
                            {
                                ok = 1;
                                tab_pp[0][2] = 1;
                                tab_pp[1][1] = 0;
                                tab1[0][2].piesa_mica=1;
                                tab1[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij-latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij-latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = 1;
                                tab_pp[1][1] = 0;
                                tab1[1][0].piesa_mica=1;
                                tab1[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = 1;
                                tab_pp[1][1] = 0;
                                tab1[1][2].piesa_mica=1;
                                tab1[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = 1;
                                tab_pp[1][1] = 0;
                                tab1[2][0].piesa_mica=1;
                                tab1[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = 1;
                                tab_pp[1][1] = 0;
                                tab1[2][1].piesa_mica=1;
                                tab1[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = 1;
                                tab_pp[1][1] = 0;
                                tab1[2][2].piesa_mica=1;
                                tab1[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }

                }

                ///pe pozitia 11 in matrice se afla o piesa medie a jucatorului 1

                else if(tab_pp[1][1]==2 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_medie=2;
                                tab1[1][1].piesa_medie=0;
                                tab_pp[0][1] = 2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 1;
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = 2;
                                tab1[0][0].piesa_medie=2;
                                tab1[1][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 1;
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 2;
                                tab1[0][2].piesa_medie=2;
                                tab1[1][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 1;
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 2;
                                tab1[1][0].piesa_medie=2;
                                tab1[1][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 1;
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 2;
                                tab1[1][2].piesa_medie=2;
                                tab1[1][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 1;
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 2;
                                tab1[2][0].piesa_medie=2;
                                tab1[1][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 1;
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 2;
                                tab1[2][1].piesa_medie=2;
                                tab1[1][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 1;
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 2;
                                tab1[2][2].piesa_medie=2;
                                tab1[1][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 1;
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                ///pe pozitia 11 in matrice se afla o piesa mare a jucatorului 1

                else if(tab_pp[1][1]==3 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_mare=3;
                                tab1[1][1].piesa_mare=0;
                                tab_pp[0][1] = 3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = 3;
                                tab1[0][0].piesa_mare=3;
                                tab1[1][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 3;
                                tab1[0][2].piesa_mare=3;
                                tab1[1][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij-latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij-latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 3;
                                tab1[1][0].piesa_mare=3;
                                tab1[1][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 3;
                                tab1[1][2].piesa_mare=3;
                                tab1[1][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 3;
                                tab1[2][0].piesa_mare=3;
                                tab1[1][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 3;
                                tab1[2][1].piesa_mare=3;
                                tab1[1][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 3;
                                tab1[2][2].piesa_mare=3;
                                tab1[1][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }

                else if (tab_pp[1][1] == -1 && tura % 2 == 1) /// piesa mica, pozitia 11 jucator 2
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = -1;
                                tab_pp[1][1] = 0;
                                tab2[0][1].piesa_mica=-1;
                                tab2[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 00 in matrice (pozitie libera)
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][0] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][0] = -1;
                                tab_pp[1][1] = 0;
                                tab2[0][0].piesa_mica=-1;
                                tab2[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij - latura_patrat/2 - latura_patrat)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] == 0)
                            {
                                ok = 1;
                                tab_pp[0][2] = -1;
                                tab_pp[1][1] = 0;
                                tab2[0][2].piesa_mica=-1;
                                tab2[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = -1;
                                tab_pp[1][1] = 0;
                                tab2[1][0].piesa_mica=-1;
                                tab2[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = -1;
                                tab_pp[1][1] = 0;
                                tab2[1][2].piesa_mica=-1;
                                tab2[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = -1;
                                tab_pp[1][1] = 0;
                                tab2[2][0].piesa_mica=-1;
                                tab2[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = -1;
                                tab_pp[1][1] = 0;
                                tab2[2][1].piesa_mica=-1;
                                tab2[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = -1;
                                tab_pp[1][1] = 0;
                                tab2[2][2].piesa_mica=-1;
                                tab2[1][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }
                }

                else if(tab_pp[1][1]==-2 && tura % 2 == 1) /// piesa medie, pozitia 11, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_medie=-2;
                                tab2[1][1].piesa_medie=0;
                                tab_pp[0][1] = -2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = -2;
                                tab2[0][0].piesa_medie=-2;
                                tab2[1][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -2;
                                tab2[0][2].piesa_medie=-2;
                                tab2[1][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -2;
                                tab2[1][0].piesa_medie=-2;
                                tab2[1][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -2;
                                tab2[1][2].piesa_medie=-2;
                                tab2[1][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -2;
                                tab2[2][0].piesa_medie=-2;
                                tab2[1][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -2;
                                tab2[2][1].piesa_medie=-2;
                                tab2[1][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -2;
                                tab2[2][2].piesa_medie=-2;
                                tab2[1][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                else if(tab_pp[1][1]==-3 && tura % 2 == 1) /// piesa mare, pozitia 11, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_mare=-3;
                                tab2[1][1].piesa_mare=0;
                                tab_pp[0][1] = -3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = -3;
                                tab2[0][0].piesa_mare=-3;
                                tab2[1][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -3;
                                tab2[0][2].piesa_mare=-3;
                                tab2[1][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -3;
                                tab2[1][0].piesa_mare=-3;
                                tab2[1][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -3;
                                tab2[1][2].piesa_mare=-3;
                                tab2[1][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -3;
                                tab2[2][0].piesa_mare=-3;
                                tab2[1][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -3;
                                tab2[2][1].piesa_mare=-3;
                                tab2[1][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -3;
                                tab2[2][2].piesa_mare=-3;
                                tab2[1][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][1] = 2;
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_medie == -2)
                                {
                                    tab_pp[1][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 35);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else if(tab1[1][1].piesa_mica == 1)
                                {
                                    tab_pp[1][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare1);
                                }
                                else if(tab2[1][1].piesa_mica == -1)
                                {
                                    tab_pp[1][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij, 20);
                                    floodfill(xmij, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][1]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }
            }
            clearmouseclick(WM_LBUTTONDOWN);
        }

        else if (x >= xmij + latura_patrat/2 && x <= xmij + latura_patrat/2 + latura_patrat &&
                 y >= ymij - latura_patrat/2 && y <= ymij + latura_patrat/2)/// am selecatat piesa din pozitia 12 in matrice
        {
            if (ismouseclick(WM_LBUTTONDOWN) == 1)
            {
                if (tab_pp[1][2] == 1 && tura % 2 == 0) ///pe poz 11 se afla piesa mica jucator 1
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij + latura_patrat, ymij, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = 1;
                                tab_pp[1][2] = 0;
                                tab1[0][1].piesa_mica=1;
                                tab1[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 00 in matrice (pozitie libera)
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][0] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][0] = 1;
                                tab_pp[1][2] = 0;
                                tab1[0][0].piesa_mica=1;
                                tab1[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] == 0)
                            {
                                ok = 1;
                                tab_pp[0][2] = 1;
                                tab_pp[1][2] = 0;
                                tab1[0][2].piesa_mica=1;
                                tab1[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij-latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij-latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = 1;
                                tab_pp[1][2] = 0;
                                tab1[1][0].piesa_mica=1;
                                tab1[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = 1;
                                tab_pp[1][2] = 0;
                                tab1[1][1].piesa_mica=1;
                                tab1[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = 1;
                                tab_pp[1][2] = 0;
                                tab1[2][0].piesa_mica=1;
                                tab1[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = 1;
                                tab_pp[1][2] = 0;
                                tab1[2][1].piesa_mica=1;
                                tab1[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = 1;
                                tab_pp[1][2] = 0;
                                tab1[2][2].piesa_mica=1;
                                tab1[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }

                }

                ///pe pozitia 11 in matrice se afla o piesa medie a jucatorului 1

                else if(tab_pp[1][2]==2 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_medie=2;
                                tab1[1][2].piesa_medie=0;
                                tab_pp[0][1] = 2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 1;
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = 2;
                                tab1[0][0].piesa_medie=2;
                                tab1[1][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 1;
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 2;
                                tab1[0][2].piesa_medie=2;
                                tab1[1][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 1;
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 2;
                                tab1[1][0].piesa_medie=2;
                                tab1[1][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 1;
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 2;
                                tab1[1][1].piesa_medie=2;
                                tab1[1][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 1;
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 2;
                                tab1[2][0].piesa_medie=2;
                                tab1[1][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 1;
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 2;
                                tab1[2][1].piesa_medie=2;
                                tab1[1][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 1;
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 2;
                                tab1[2][2].piesa_medie=2;
                                tab1[1][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 1;
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                ///pe pozitia 11 in matrice se afla o piesa mare a jucatorului 1

                else if(tab_pp[1][2]==3 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_mare=3;
                                tab1[1][2].piesa_mare=0;
                                tab_pp[0][1] = 3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = 3;
                                tab1[0][0].piesa_mare=3;
                                tab1[1][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 3;
                                tab1[0][2].piesa_mare=3;
                                tab1[1][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij-latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij-latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 3;
                                tab1[1][0].piesa_mare=3;
                                tab1[1][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 3;
                                tab1[1][1].piesa_mare=3;
                                tab1[1][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 3;
                                tab1[2][0].piesa_mare=3;
                                tab1[1][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 3;
                                tab1[2][1].piesa_mare=3;
                                tab1[1][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 3;
                                tab1[2][2].piesa_mare=3;
                                tab1[1][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }

                else if (tab_pp[1][2] == -1 && tura % 2 == 1) /// piesa mica, pozitia 11 jucator 2
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = -1;
                                tab_pp[1][2] = 0;
                                tab2[0][1].piesa_mica=-1;
                                tab2[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 00 in matrice (pozitie libera)
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][0] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][0] = -1;
                                tab_pp[1][2] = 0;
                                tab2[0][0].piesa_mica=-1;
                                tab2[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2- latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] == 0)
                            {
                                ok = 1;
                                tab_pp[0][2] = -1;
                                tab_pp[1][2] = 0;
                                tab2[0][2].piesa_mica=-1;
                                tab2[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = -1;
                                tab_pp[1][2] = 0;
                                tab2[1][0].piesa_mica=-1;
                                tab2[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = -1;
                                tab_pp[1][2] = 0;
                                tab2[1][1].piesa_mica=-1;
                                tab2[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = -1;
                                tab_pp[1][2] = 0;
                                tab2[2][0].piesa_mica=-1;
                                tab2[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = -1;
                                tab_pp[1][2] = 0;
                                tab2[2][1].piesa_mica=-1;
                                tab2[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = -1;
                                tab_pp[1][2] = 0;
                                tab2[2][2].piesa_mica=-1;
                                tab2[1][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }
                }

                else if(tab_pp[1][2]==-2 && tura % 2 == 1) /// piesa medie, pozitia 11, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_medie=-2;
                                tab2[1][2].piesa_medie=0;
                                tab_pp[0][1] = -2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = -2;
                                tab2[0][0].piesa_medie=-2;
                                tab2[1][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -2;
                                tab2[0][2].piesa_medie=-2;
                                tab2[1][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -2;
                                tab2[1][0].piesa_medie=-2;
                                tab2[1][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -2;
                                tab2[1][1].piesa_medie=-2;
                                tab2[1][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -2;
                                tab2[2][0].piesa_medie=-2;
                                tab2[1][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -2;
                                tab2[2][1].piesa_medie=-2;
                                tab2[1][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -2;
                                tab2[2][2].piesa_medie=-2;
                                tab2[1][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                else if(tab_pp[1][2]==-3 && tura % 2 == 1) /// piesa mare, pozitia 11, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_mare=-3;
                                tab2[1][2].piesa_mare=0;
                                tab_pp[0][1] = -3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = -3;
                                tab2[0][0].piesa_mare=-3;
                                tab2[1][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -3;
                                tab2[0][2].piesa_mare=-3;
                                tab2[1][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -3;
                                tab2[1][0].piesa_mare=-3;
                                tab2[1][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -3;
                                tab2[1][1].piesa_mare=-3;
                                tab2[1][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -3;
                                tab2[2][0].piesa_mare=-3;
                                tab2[1][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -3;
                                tab2[2][1].piesa_mare=-3;
                                tab2[1][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -3;
                                tab2[2][2].piesa_mare=-3;
                                tab2[1][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[1][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[1][2] = 2;
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_medie == -2)
                                {
                                    tab_pp[1][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 35);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else if(tab1[1][2].piesa_mica == 1)
                                {
                                    tab_pp[1][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare1);
                                }
                                else if(tab2[1][2].piesa_mica == -1)
                                {
                                    tab_pp[1][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij, 20);
                                    floodfill(xmij+latura_patrat, ymij, culoare2);
                                }
                                else
                                    tab_pp[1][2]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }
            }
            clearmouseclick(WM_LBUTTONDOWN);
        }

        else if (x >= xmij - latura_patrat/2 - latura_patrat && x <= xmij - latura_patrat/2 &&
                 y >= ymij + latura_patrat/2 && y <= ymij + latura_patrat/2 + latura_patrat)/// am selecatat piesa din pozitia 20 in matrice
        {
            if (ismouseclick(WM_LBUTTONDOWN) == 1)
            {
                if (tab_pp[2][0] == 1 && tura % 2 == 0) ///pe poz 20 se afla piesa mica jucator 1
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij - latura_patrat, ymij + latura_patrat, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = 1;
                                tab_pp[2][0] = 0;
                                tab1[0][1].piesa_mica=1;
                                tab1[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij + latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 00 in matrice (pozitie libera)
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][0] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][0] = 1;
                                tab_pp[2][0] = 0;
                                tab1[0][0].piesa_mica=1;
                                tab1[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] == 0)
                            {
                                ok = 1;
                                tab_pp[0][2] = 1;
                                tab_pp[2][0] = 0;
                                tab1[0][2].piesa_mica=1;
                                tab1[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij-latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij-latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = 1;
                                tab_pp[2][0] = 0;
                                tab1[1][1].piesa_mica=1;
                                tab1[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = 1;
                                tab_pp[2][0] = 0;
                                tab1[1][2].piesa_mica=1;
                                tab1[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = 1;
                                tab_pp[2][0] = 0;
                                tab1[1][0].piesa_mica=1;
                                tab1[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = 1;
                                tab_pp[2][0] = 0;
                                tab1[2][1].piesa_mica=1;
                                tab1[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = 1;
                                tab_pp[2][0] = 0;
                                tab1[2][2].piesa_mica=1;
                                tab1[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }

                }

                ///pe pozitia 20 in matrice se afla o piesa medie a jucatorului 1

                else if(tab_pp[2][0]==2 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij+latura_patrat, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_medie=2;
                                tab1[2][0].piesa_medie=0;
                                tab_pp[0][1] = 2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 1;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = 2;
                                tab1[0][0].piesa_medie=2;
                                tab1[2][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 1;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 2;
                                tab1[0][2].piesa_medie=2;
                                tab1[2][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 1;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 2;
                                tab1[1][1].piesa_medie=2;
                                tab1[2][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 1;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 2;
                                tab1[1][2].piesa_medie=2;
                                tab1[2][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 1;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 2;
                                tab1[1][0].piesa_medie=2;
                                tab1[2][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 1;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 2;
                                tab1[2][1].piesa_medie=2;
                                tab1[2][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 1;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 2;
                                tab1[2][2].piesa_medie=2;
                                tab1[2][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 1;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij - latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                ///pe pozitia 20 in matrice se afla o piesa mare a jucatorului 1

                else if(tab_pp[2][0]==3 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij+latura_patrat, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_mare=3;
                                tab1[2][0].piesa_mare=0;
                                tab_pp[0][1] = 3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = 3;
                                tab1[0][0].piesa_mare=3;
                                tab1[2][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 3;
                                tab1[0][2].piesa_mare=3;
                                tab1[2][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij-latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij-latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 3;
                                tab1[1][1].piesa_mare=3;
                                tab1[2][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 3;
                                tab1[1][2].piesa_mare=3;
                                tab1[2][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 3;
                                tab1[1][0].piesa_mare=3;
                                tab1[2][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 3;
                                tab1[2][1].piesa_mare=3;
                                tab1[2][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 3;
                                tab1[2][2].piesa_mare=3;
                                tab1[2][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij - latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }

                else if (tab_pp[2][0] == -1 && tura % 2 == 1) /// piesa mica, pozitia 20 jucator 2
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij+latura_patrat, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = -1;
                                tab_pp[2][0] = 0;
                                tab2[0][1].piesa_mica=-1;
                                tab2[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 00 in matrice (pozitie libera)
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][0] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][0] = -1;
                                tab_pp[2][0] = 0;
                                tab2[0][0].piesa_mica=-1;
                                tab2[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij - latura_patrat/2 - latura_patrat)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] == 0)
                            {
                                ok = 1;
                                tab_pp[0][2] = -1;
                                tab_pp[2][0] = 0;
                                tab2[0][2].piesa_mica=-1;
                                tab2[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = -1;
                                tab_pp[2][0] = 0;
                                tab2[1][1].piesa_mica=-1;
                                tab2[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = -1;
                                tab_pp[2][0] = 0;
                                tab2[1][2].piesa_mica=-1;
                                tab2[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = -1;
                                tab_pp[2][0] = 0;
                                tab2[1][0].piesa_mica=-1;
                                tab2[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = -1;
                                tab_pp[2][0] = 0;
                                tab2[2][1].piesa_mica=-1;
                                tab2[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = -1;
                                tab_pp[2][0] = 0;
                                tab2[2][2].piesa_mica=-1;
                                tab2[2][0].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }
                }

                else if(tab_pp[2][0]==-2 && tura % 2 == 1) /// piesa medie, pozitia 20, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij + latura_patrat, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_medie=-2;
                                tab2[2][0].piesa_medie=0;
                                tab_pp[0][1] = -2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = -2;
                                tab2[0][0].piesa_medie=-2;
                                tab2[2][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -2;
                                tab2[0][2].piesa_medie=-2;
                                tab2[2][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -2;
                                tab2[1][1].piesa_medie=-2;
                                tab2[2][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -2;
                                tab2[1][2].piesa_medie=-2;
                                tab2[2][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -2;
                                tab2[1][0].piesa_medie=-2;
                                tab2[2][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -2;
                                tab2[2][1].piesa_medie=-2;
                                tab2[2][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -2;
                                tab2[2][2].piesa_medie=-2;
                                tab2[2][0].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                else if(tab_pp[2][0]==-3 && tura % 2 == 1) /// piesa mare, pozitia 20, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij-latura_patrat, ymij+latura_patrat, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_mare=-3;
                                tab2[2][0].piesa_mare=0;
                                tab_pp[0][1] = -3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = -3;
                                tab2[0][0].piesa_mare=-3;
                                tab2[2][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -3;
                                tab2[0][2].piesa_mare=-3;
                                tab2[2][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }

                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -3;
                                tab2[1][1].piesa_mare=-3;
                                tab2[2][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -3;
                                tab2[1][2].piesa_mare=-3;
                                tab2[2][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -3;
                                tab2[1][0].piesa_mare=-3;
                                tab2[2][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -3;
                                tab2[2][1].piesa_mare=-3;
                                tab2[2][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -3;
                                tab2[2][2].piesa_mare=-3;
                                tab2[2][0].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][0].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][0] = 2;
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_medie == -2)
                                {
                                    tab_pp[2][0] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][0].piesa_mica == 1)
                                {
                                    tab_pp[2][0] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][0].piesa_mica == -1)
                                {
                                    tab_pp[2][0] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij-latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij-latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][0]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }
            }
            clearmouseclick(WM_LBUTTONDOWN);
        }

        else if (x >= xmij - latura_patrat/2 && x <= xmij + latura_patrat/2 &&
                 y >= ymij + latura_patrat/2 && y <= ymij + latura_patrat/2 + latura_patrat)/// am selecatat piesa din pozitia 21 in matrice
        {
            if (ismouseclick(WM_LBUTTONDOWN) == 1)
            {
                if (tab_pp[2][1] == 1 && tura % 2 == 0) ///pe poz 11 se afla piesa mica jucator 1
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij + latura_patrat, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = 1;
                                tab_pp[2][1] = 0;
                                tab1[0][1].piesa_mica=1;
                                tab1[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij + latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 00 in matrice (pozitie libera)
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][0] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][0] = 1;
                                tab_pp[2][1] = 0;
                                tab1[0][0].piesa_mica=1;
                                tab1[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] == 0)
                            {
                                ok = 1;
                                tab_pp[0][2] = 1;
                                tab_pp[2][1] = 0;
                                tab1[0][2].piesa_mica=1;
                                tab1[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij-latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij-latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = 1;
                                tab_pp[2][1] = 0;
                                tab1[1][0].piesa_mica=1;
                                tab1[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = 1;
                                tab_pp[2][1] = 0;
                                tab1[1][2].piesa_mica=1;
                                tab1[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = 1;
                                tab_pp[2][1] = 0;
                                tab1[2][0].piesa_mica=1;
                                tab1[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat/2 && poz2 <= ymij +  latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = 1;
                                tab_pp[2][1] = 0;
                                tab1[1][1].piesa_mica=1;
                                tab1[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = 1;
                                tab_pp[2][1] = 0;
                                tab1[2][2].piesa_mica=1;
                                tab1[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }

                }

                ///pe pozitia 21 in matrice se afla o piesa medie a jucatorului 1

                else if(tab_pp[2][1]==2 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij+latura_patrat, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_medie=2;
                                tab1[2][1].piesa_medie=0;
                                tab_pp[0][1] = 2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 1;
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = 2;
                                tab1[0][0].piesa_medie=2;
                                tab1[2][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 1;
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 2;
                                tab1[0][2].piesa_medie=2;
                                tab1[2][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 1;
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 2;
                                tab1[1][0].piesa_medie=2;
                                tab1[2][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 1;
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 2;
                                tab1[1][2].piesa_medie=2;
                                tab1[2][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 1;
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 2;
                                tab1[2][0].piesa_medie=2;
                                tab1[2][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 1;
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 2;
                                tab1[1][1].piesa_medie=2;
                                tab1[2][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 1;
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 2;
                                tab1[2][2].piesa_medie=2;
                                tab1[2][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 1;
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                ///pe pozitia 21 in matrice se afla o piesa mare a jucatorului 1

                else if(tab_pp[2][1]==3 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij+latura_patrat, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_mare=3;
                                tab1[2][1].piesa_mare=0;
                                tab_pp[0][1] = 3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = 3;
                                tab1[0][0].piesa_mare=3;
                                tab1[2][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 3;
                                tab1[0][2].piesa_mare=3;
                                tab1[2][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij-latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij-latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 3;
                                tab1[1][0].piesa_mare=3;
                                tab1[2][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 3;
                                tab1[1][2].piesa_mare=3;
                                tab1[2][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 3;
                                tab1[2][0].piesa_mare=3;
                                tab1[2][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 3;
                                tab1[1][1].piesa_mare=3;
                                tab1[2][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = 3;
                                tab1[2][2].piesa_mare=3;
                                tab1[2][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }

                else if (tab_pp[2][1] == -1 && tura % 2 == 1) /// piesa mica, pozitia 21 jucator 2
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij + latura_patrat, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = -1;
                                tab_pp[2][1] = 0;
                                tab2[0][1].piesa_mica=-1;
                                tab2[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 00 in matrice (pozitie libera)
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][0] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][0] = -1;
                                tab_pp[2][1] = 0;
                                tab2[0][0].piesa_mica=-1;
                                tab2[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij - latura_patrat/2 - latura_patrat)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] == 0)
                            {
                                ok = 1;
                                tab_pp[0][2] = -1;
                                tab_pp[2][1] = 0;
                                tab2[0][2].piesa_mica=-1;
                                tab2[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = -1;
                                tab_pp[2][1] = 0;
                                tab2[1][0].piesa_mica=-1;
                                tab2[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = -1;
                                tab_pp[2][1] = 0;
                                tab2[1][2].piesa_mica=-1;
                                tab2[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = -1;
                                tab_pp[2][1] = 0;
                                tab2[2][0].piesa_mica=-1;
                                tab2[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = -1;
                                tab_pp[2][1] = 0;
                                tab2[1][1].piesa_mica=-1;
                                tab2[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] == 0)
                            {
                                ok = 1;
                                tab_pp[2][2] = -1;
                                tab_pp[2][1] = 0;
                                tab2[2][2].piesa_mica=-1;
                                tab2[2][1].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }
                }

                else if(tab_pp[2][1]==-2 && tura % 2 == 1) /// piesa medie, pozitia 21, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij+latura_patrat, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_medie=-2;
                                tab2[2][1].piesa_medie=0;
                                tab_pp[0][1] = -2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = -2;
                                tab2[0][0].piesa_medie=-2;
                                tab2[2][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -2;
                                tab2[0][2].piesa_medie=-2;
                                tab2[2][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -2;
                                tab2[1][0].piesa_medie=-2;
                                tab2[2][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -2;
                                tab2[1][2].piesa_medie=-2;
                                tab2[2][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -2;
                                tab2[2][0].piesa_medie=-2;
                                tab2[2][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -2;
                                tab2[1][1].piesa_medie=-2;
                                tab2[2][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2] !=2 && tab_pp[2][2] !=-2 && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -2;
                                tab2[2][2].piesa_medie=-2;
                                tab2[2][1].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                else if(tab_pp[2][1]==-3 && tura % 2 == 1) /// piesa mare, pozitia 21, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij, ymij+latura_patrat, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_mare=-3;
                                tab2[2][1].piesa_mare=0;
                                tab_pp[0][1] = -3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = -3;
                                tab2[0][0].piesa_mare=-3;
                                tab2[2][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -3;
                                tab2[0][2].piesa_mare=-3;
                                tab2[2][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -3;
                                tab2[1][0].piesa_mare=-3;
                                tab2[2][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -3;
                                tab2[1][2].piesa_mare=-3;
                                tab2[2][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -3;
                                tab2[2][0].piesa_mare=-3;
                                tab2[2][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -3;
                                tab2[1][1].piesa_mare=-3;
                                tab2[2][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        ///verificarea pozitiei 22 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][2]!=3 && tab_pp[2][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][2] = -3;
                                tab2[2][2].piesa_mare=-3;
                                tab2[2][1].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][1].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][1] = 2;
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_medie == -2)
                                {
                                    tab_pp[2][1] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 35);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][1].piesa_mica == 1)
                                {
                                    tab_pp[2][1] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][1].piesa_mica == -1)
                                {
                                    tab_pp[2][1] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij, ymij+latura_patrat, 20);
                                    floodfill(xmij, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][1]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }
            }
            clearmouseclick(WM_LBUTTONDOWN);
        }

        else if (x >= xmij + latura_patrat/2 && x <= xmij + latura_patrat/2 + latura_patrat &&
                 y >= ymij + latura_patrat/2 && y <= ymij + latura_patrat/2 + latura_patrat)/// am selecatat piesa din pozitia 22 in matrice
        {
            if (ismouseclick(WM_LBUTTONDOWN) == 1)
            {
                if (tab_pp[2][2] == 1 && tura % 2 == 0) ///pe poz 22 se afla piesa mica jucator 1
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij + latura_patrat, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = 1;
                                tab_pp[2][2] = 0;
                                tab1[0][1].piesa_mica=1;
                                tab1[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij + latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 00 in matrice (pozitie libera)
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][0] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][0] = 1;
                                tab_pp[2][2] = 0;
                                tab1[0][0].piesa_mica=1;
                                tab1[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] == 0)
                            {
                                ok = 1;
                                tab_pp[0][2] = 1;
                                tab_pp[2][2] = 0;
                                tab1[0][2].piesa_mica=1;
                                tab1[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij-latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij-latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = 1;
                                tab_pp[2][2] = 0;
                                tab1[1][0].piesa_mica=1;
                                tab1[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = 1;
                                tab_pp[2][2] = 0;
                                tab1[1][2].piesa_mica=1;
                                tab1[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = 1;
                                tab_pp[2][2] = 0;
                                tab1[2][0].piesa_mica=1;
                                tab1[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1+latura_patrat, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat/2 && poz2 <= ymij +  latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = 1;
                                tab_pp[2][2] = 0;
                                tab1[1][1].piesa_mica=1;
                                tab1[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = 1;
                                tab_pp[2][2] = 0;
                                tab1[2][1].piesa_mica=1;
                                tab1[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }

                }

                ///pe pozitia 22 in matrice se afla o piesa medie a jucatorului 1

                else if(tab_pp[2][2]==2 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij+latura_patrat, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_medie=2;
                                tab1[2][2].piesa_medie=0;
                                tab_pp[0][1] = 2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 1;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = 2;
                                tab1[0][0].piesa_medie=2;
                                tab1[2][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 1;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 2;
                                tab1[0][2].piesa_medie=2;
                                tab1[2][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 1;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 2;
                                tab1[1][0].piesa_medie=2;
                                tab1[2][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 1;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 2;
                                tab1[1][2].piesa_medie=2;
                                tab1[2][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 1;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 2;
                                tab1[2][0].piesa_medie=2;
                                tab1[2][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 1;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 2;
                                tab1[1][1].piesa_medie=2;
                                tab1[2][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 1;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 2;
                                tab1[2][1].piesa_medie=2;
                                tab1[2][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 1;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                ///pe pozitia 22 in matrice se afla o piesa mare a jucatorului 1

                else if(tab_pp[2][2]==3 && tura % 2 == 0)
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij+latura_patrat, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab1[0][1].piesa_mare=3;
                                tab1[2][2].piesa_mare=0;
                                tab_pp[0][1] = 3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = 3;
                                tab1[0][0].piesa_mare=3;
                                tab1[2][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = 3;
                                tab1[0][2].piesa_mare=3;
                                tab1[2][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij-latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij-latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = 3;
                                tab1[1][0].piesa_mare=3;
                                tab1[2][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = 3;
                                tab1[1][2].piesa_mare=3;
                                tab1[2][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = 3;
                                tab1[2][0].piesa_mare=3;
                                tab1[2][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = 3;
                                tab1[1][1].piesa_mare=3;
                                tab1[2][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = 3;
                                tab1[2][1].piesa_mare=3;
                                tab1[2][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare1);
                                setcolor(culoare1);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare1);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }

                }

                else if (tab_pp[2][2] == -1 && tura % 2 == 1) /// piesa mica, pozitia 22 jucator 2
                {
                    ok = 0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij + latura_patrat, 21);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] == 0)
                            {
                                ok = 1;
                                tab_pp[0][1] = -1;
                                tab_pp[2][2] = 0;
                                tab2[0][1].piesa_mica=-1;
                                tab2[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 20);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 00 in matrice (pozitie libera)
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (tab_pp[0][0] == 0 && ismouseclick(WM_LBUTTONDOWN))
                            {
                                ok = 1;
                                tab_pp[0][0] = -1;
                                tab_pp[2][2] = 0;
                                tab2[0][0].piesa_mica=-1;
                                tab2[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 20);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij - latura_patrat/2 - latura_patrat)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] == 0)
                            {
                                ok = 1;
                                tab_pp[0][2] = -1;
                                tab_pp[2][2] = 0;
                                tab2[0][2].piesa_mica=-1;
                                tab2[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 20);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] == 0)
                            {
                                ok = 1;
                                tab_pp[1][0] = -1;
                                tab_pp[2][2] = 0;
                                tab2[1][0].piesa_mica=-1;
                                tab2[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 20);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] == 0)
                            {
                                ok = 1;
                                tab_pp[1][2] = -1;
                                tab_pp[2][2] = 0;
                                tab2[1][2].piesa_mica=-1;
                                tab2[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 20);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] == 0)
                            {
                                ok = 1;
                                tab_pp[2][0] = -1;
                                tab_pp[2][2] = 0;
                                tab2[2][0].piesa_mica=-1;
                                tab2[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 20);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] == 0)
                            {
                                ok = 1;
                                tab_pp[1][1] = -1;
                                tab_pp[2][2] = 0;
                                tab2[1][1].piesa_mica=-1;
                                tab2[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 20);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] == 0)
                            {
                                ok = 1;
                                tab_pp[2][1] = -1;
                                tab_pp[2][2] = 0;
                                tab2[2][1].piesa_mica=-1;
                                tab2[2][2].piesa_mica=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 20);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);
                    }
                }

                else if(tab_pp[2][2]==-2 && tura % 2 == 1) /// piesa medie, pozitia 22, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij+latura_patrat, 36);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=2 && tab_pp[0][1] !=-2 && tab_pp[0][1]!=3 && tab_pp[0][1]!=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_medie=-2;
                                tab2[2][2].piesa_medie=0;
                                tab_pp[0][1] = -2;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 35);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0] !=2 && tab_pp[0][0] !=-2 && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = -2;
                                tab2[0][0].piesa_medie=-2;
                                tab2[2][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 35);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2] !=2 && tab_pp[0][2] !=-2 && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -2;
                                tab2[0][2].piesa_medie=-2;
                                tab2[2][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 35);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0] !=2 && tab_pp[1][0] !=-2 && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -2;
                                tab2[1][0].piesa_medie=-2;
                                tab2[2][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 35);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2] !=2 && tab_pp[1][2] !=-2 && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -2;
                                tab2[1][2].piesa_medie=-2;
                                tab2[2][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 35);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0] !=2 && tab_pp[2][0] !=-2 && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -2;
                                tab2[2][0].piesa_medie=-2;
                                tab2[2][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 35);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1] !=2 && tab_pp[1][1] !=-2 && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -2;
                                tab2[1][1].piesa_medie=-2;
                                tab2[2][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 35);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1] !=2 && tab_pp[2][1] !=-2 && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -2;
                                tab2[2][1].piesa_medie=-2;
                                tab2[2][2].piesa_medie=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 35);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa mica sub cea medie
                                if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }

                else if(tab_pp[2][2]==-3 && tura % 2 == 1) /// piesa mare, pozitia 22, jucator 2
                {
                    ok=0;
                    setcolor(LIGHTCYAN);
                    setlinestyle(DOTTED_LINE, 0, 3);
                    circle (xmij+latura_patrat, ymij+latura_patrat, 51);///contureaza piesa selectata
                    setlinestyle(SOLID_LINE, 0, 1);
                    clearmouseclick(WM_LBUTTONDOWN);
                    while (ok == 0)
                    {
                        poz1 = mousex();
                        poz2 = mousey();
                        if (poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2) ///am selectat plasarea pe pozitia 01 in matrice
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][1] !=3 && tab_pp[0][1] !=-3)
                            {
                                ok = 1;
                                tab2[0][1].piesa_mare=-3;
                                tab2[2][2].piesa_mare=0;
                                tab_pp[0][1] = -3;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle(xmij, ymij - latura_patrat, 50);
                                floodfill(xmij, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 00 in matrice
                        else if (poz1>= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat - latura_patrat/2 && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][0]!=3 && tab_pp[0][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][0] = -3;
                                tab2[0][0].piesa_mare=-3;
                                tab2[2][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij - latura_patrat, 50);
                                floodfill (xmij - latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE);

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 02 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat/2 + latura_patrat &&
                                poz2 >= ymij - latura_patrat/2 - latura_patrat && poz2 <= ymij - latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[0][2]!=3 && tab_pp[0][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[0][2] = -3;
                                tab2[0][2].piesa_mare=-3;
                                tab2[2][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij - latura_patrat, 50);
                                floodfill(xmij + latura_patrat, ymij - latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }

                        ///verificarea pozitiei 10 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 - latura_patrat && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][0]!=3 && tab_pp[1][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][0] = -3;
                                tab2[1][0].piesa_mare=-3;
                                tab2[2][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij, 50);
                                floodfill(xmij - latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }

                        ///verificarea pozitiei 12 in matrice (pozitie libera)
                        else if(poz1 >= xmij + latura_patrat/2 && poz1 <= xmij + latura_patrat + latura_patrat/2 &&
                                poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][2]!=3 && tab_pp[1][2]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][2] = -3;
                                tab2[1][2].piesa_mare=-3;
                                tab2[2][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij + latura_patrat, ymij, 50);
                                floodfill(xmij + latura_patrat, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }

                        ///verificarea pozitiei 20 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat - latura_patrat/2 && poz1 <= xmij - latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][0]!=3 && tab_pp[2][0]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][0] = -3;
                                tab2[2][0].piesa_mare=-3;
                                tab2[2][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij - latura_patrat, ymij + latura_patrat, 50);
                                floodfill(xmij - latura_patrat, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 11 in matrice (pozitie libera)
                        else if( poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                 poz2 >= ymij - latura_patrat/2 && poz2 <= ymij + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[1][1]!=3 && tab_pp[1][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[1][1] = -3;
                                tab2[1][1].piesa_mare=-3;
                                tab2[2][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij, 50);
                                floodfill(xmij, ymij, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        ///verificarea pozitiei 21 in matrice (pozitie libera)
                        else if(poz1 >= xmij - latura_patrat/2 && poz1 <= xmij + latura_patrat/2 &&
                                poz2 >= ymij + latura_patrat/2 && poz2 <= ymij + latura_patrat + latura_patrat/2)
                        {
                            if (ismouseclick(WM_LBUTTONDOWN) && tab_pp[2][1]!=3 && tab_pp[2][1]!=-3)
                            {
                                ok = 1;
                                tab_pp[2][1] = -3;
                                tab2[2][1].piesa_mare=-3;
                                tab2[2][2].piesa_mare=0;
                                Label(tura);
                                tura++;
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+1, ymij+latura_patrat+1, WHITE);
                                setfillstyle(SOLID_FILL, culoare2);
                                setcolor(culoare2);
                                circle (xmij, ymij + latura_patrat, 50);
                                floodfill(xmij, ymij + latura_patrat, culoare2);
                                setfillstyle(SOLID_FILL, BLACK);
                                floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

                                ///verificam daca exista o piesa medie sau mica sub cea medie
                                if(tab1[2][2].piesa_medie == 2)
                                {
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    tab_pp[2][2] = 2;
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_medie == -2)
                                {
                                    tab_pp[2][2] = -2;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 35);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else if(tab1[2][2].piesa_mica == 1)
                                {
                                    tab_pp[2][2] = 1;
                                    setfillstyle(SOLID_FILL, culoare1);
                                    setcolor(culoare1);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare1);
                                }
                                else if(tab2[2][2].piesa_mica == -1)
                                {
                                    tab_pp[2][2] = -1;
                                    setfillstyle(SOLID_FILL, culoare2);
                                    setcolor(culoare2);
                                    circle (xmij+latura_patrat, ymij+latura_patrat, 20);
                                    floodfill(xmij+latura_patrat, ymij+latura_patrat, culoare2);
                                }
                                else
                                    tab_pp[2][2]=0;
                            }
                        }
                        clearmouseclick(WM_LBUTTONDOWN);

                    }
                }
            }
            clearmouseclick(WM_LBUTTONDOWN);
        }

    }
}

void piese(int culoare1, int culoare2)
{
    int h_ecran = inaltime_ecran/2-50;

    ///piese jucator 1
    ///primele 2 piese
    setfillstyle(SOLID_FILL, culoare1);
    circle(latime_ecran/8 + 100, h_ecran - 5 - 70 - 10 - 40 - 10 - 20, 20);
    floodfill(latime_ecran/8 + 100, h_ecran - 5 - 70 - 10 - 40 - 10 - 20, WHITE );
    circle(latime_ecran/8 + 100, h_ecran - 5 - 70 - 10 - 20, 20);
    floodfill(latime_ecran/8 + 100, h_ecran - 5 - 70 - 10 - 20, WHITE );


    ///piesele medii
    circle (latime_ecran/8 + 100, h_ecran - 5 - 35, 35);
    floodfill(latime_ecran/8 + 100, h_ecran - 5 - 35, WHITE );
    circle (latime_ecran/8 + 100, h_ecran + 5 + 35, 35);
    floodfill(latime_ecran/8 + 100, h_ecran + 5 + 35, WHITE );


    ///piesele mari
    circle (latime_ecran/8 + 100, h_ecran + 5 + 70 + 10 + 50, 50);
    floodfill(latime_ecran/8 + 100, h_ecran + 5 + 70 + 10 + 50, WHITE );
    circle (latime_ecran/8 + 100, h_ecran+ 5 + 70 + 10 + 100 + 10 + 50, 50);
    floodfill(latime_ecran/8 + 100, h_ecran+ 5 + 70 + 10 + 100 + 10 + 50, WHITE );

    ///piese jucator 2
    ///primele 2 piese
    setfillstyle(SOLID_FILL, culoare2);
    circle(latime_ecran/2+latime_ecran/4 + 75, h_ecran - 5 - 70 - 10 - 40 - 10 - 20, 20);
    floodfill(latime_ecran/2+latime_ecran/4 + 75, h_ecran - 5 - 70 - 10 - 40 - 10 - 20, WHITE );
    circle(latime_ecran/2+latime_ecran/4 + 75, h_ecran - 5 - 70 - 10 - 20, 20);
    floodfill(latime_ecran/2+latime_ecran/4 + 75, h_ecran - 5 - 70 - 10 - 20, WHITE );

    ///piesele medii
    circle (latime_ecran/2+latime_ecran/4 + 75, h_ecran - 5 - 35, 35);
    floodfill(latime_ecran/2+latime_ecran/4 + 75, h_ecran - 5 - 35, WHITE );
    circle (latime_ecran/2+latime_ecran/4 + 75, h_ecran + 5 + 35, 35);
    floodfill(latime_ecran/2+latime_ecran/4 + 75, h_ecran + 5 + 35, WHITE );

    ///piesele mari
    circle (latime_ecran/2+latime_ecran/4 + 75, h_ecran + 5 + 70 + 10 + 50, 50);
    floodfill(latime_ecran/2+latime_ecran/4 + 75, h_ecran + 5 + 70 + 10 + 50, WHITE );
    circle (latime_ecran/2+latime_ecran/4 + 75, h_ecran+ 5 + 70 + 10 + 100 + 10 + 50, 50);
    floodfill(latime_ecran/2+latime_ecran/4 + 75, h_ecran+ 5 + 70 + 10 + 100 + 10 + 50, WHITE );

    pune_piesa(culoare1, culoare2);

}

void Afisare(int culoare1, int culoare2)
{
    ///raza piese mici == 20
    ///raza piese medii == 35
    ///raza piese mari ==50

    ///tabla de joc
    cleardevice();

    setcolor(WHITE);
    setfillstyle(SOLID_FILL, BLACK);

    patrat(xmij, ymij, latura_patrat); /// patrat mijloc
    floodfill(xmij+1, ymij-1, WHITE );

    patrat(xmij-latura_patrat, ymij, latura_patrat); /// patrat mijloc stanga
    floodfill(xmij-latura_patrat+1, ymij+1, WHITE );

    patrat(xmij+latura_patrat, ymij, latura_patrat); /// patrat mijloc dreapta
    floodfill(xmij+latura_patrat+1, ymij+1, WHITE );

    patrat(xmij, ymij-latura_patrat, latura_patrat); /// patrat mijloc sus
    floodfill(xmij+1, ymij-latura_patrat+1, WHITE );

    patrat(xmij-latura_patrat, ymij-latura_patrat, latura_patrat); /// patrat stanga sus
    floodfill(xmij-latura_patrat+1, ymij-latura_patrat+1, WHITE );

    patrat(xmij+latura_patrat, ymij-latura_patrat, latura_patrat); /// patrat dreapta sus
    floodfill(xmij+latura_patrat+1, ymij-latura_patrat+1, WHITE );

    patrat(xmij, ymij+latura_patrat, latura_patrat); /// patrat mijloc jos
    floodfill(xmij+1, ymij+latura_patrat+1, WHITE );

    patrat(xmij-latura_patrat, ymij+latura_patrat, latura_patrat); /// patrat stanga jos
    floodfill(xmij-latura_patrat+1, ymij+latura_patrat+1, WHITE );

    patrat(xmij+latura_patrat, ymij+latura_patrat, latura_patrat); ///patrat dreapta jos
    floodfill(xmij+latura_patrat+1, ymij+latura_patrat+1, WHITE );

    settextstyle(8, HORIZ_DIR, 15);
    int jum=latime_ecran/2;

    outtextxy(jum/2-textwidth("piese jucator 1")/2-100, 50, "piese jucator 1");
    outtextxy(jum+textwidth("piese jucator 2")/2+150, 50, "piese jucator 2");

    clearmouseclick(WM_LBUTTONDOWN);
    /// setcolor(WHITE);
    piese(culoare1, culoare2);

}

void button_start(int x, int y)
{
    int mijx = getmaxx() / 2;
    int mijy = getmaxy() / 2;
    int lungime_start = textwidth("START");
    if (y>=300 && y<=345 && x>=mijx-lungime_start/2 && x<=mijx+lungime_start/2)
    {
        cleardevice();
        culoare_piese();
        //Afisare();
    }
}

void button_Exit(int x, int y)
{
    int mijx = getmaxx() / 2;
    int mijy = getmaxy() / 2;
    int lungime_exit =textwidth("EXIT");
    if (y>=600 && y<=650 && x>=mijx-lungime_exit/2 && x<=mijx+lungime_exit/2)
        closegraph();
    //_getch();

}

void button_Reguli(int x, int y)
{
    int mijx = getmaxx() / 2;
    int mijy = getmaxy() / 2;
    int lungime_reguli = textwidth("REGULILE JOCULUI");
    if (y>=400 && y<=450 && x>=mijx-lungime_reguli/2 && x<=mijx+lungime_reguli/2)
    {
        cleardevice();
        settextstyle(COMPLEX_FONT, HORIZ_DIR, 3);
        setcolor(LIGHTGRAY);

        outtextxy(30, 100, "La fel ca in X si 0, scopul este formarea unei linii de trei piese de aceeasi culoare.");
        outtextxy(30, 130, "Insa, spre deosebire de jocul clasic, piesele se pot aseza una peste alta, cea mijlocie");
        outtextxy(30, 160, "peste cea mica, cea mare peste cele mijlocii sau mici. Jucatorii primesc cate 6 piese");
        outtextxy(30, 190, "de o culoare (2 piese mici, 2 piese mijlocii si 2 piese mari).");
        outtextxy(30, 250, "Modul de utilizare al pieselor:");
        outtextxy(30, 280, "    - Pe rand fiecare jucator poate aseza o noua piesa intr-o pozitie libera sau pe o");
        outtextxy(30, 310, "pozitie ocupata de o piesa mai mica, sau poate muta o piesa pe o alta pozitie libera");
        outtextxy(30, 340, "sau peste o alta piesa.");
        outtextxy(30, 370, "    - Pe parcurs piesele ajung sa se manance una pe alta sau sa iasa la iveala acolo");
        outtextxy(30, 400, "unde nu te astepti si sa iti strice planurile. ");
        outtextxy(30, 430, "    - Odata ce a fost selectata, piesa trebuie mutata fara posibilitatea de schimbare");
        outtextxy(30, 460, "a acesteia.");
        outtextxy(30, 520, "Gobblet Gobblers combina astfel strategia cu memoria, jucatorii fiind nevoiti sa tina");
        outtextxy(30, 550, "minte piesele ce sunt acoperite de altele mai mari, pentru a nu crea un avantaj jucato-");
        outtextxy(30, 580, "rului advers.");
        outtextxy(5, 610, "Jucatorul care reuseste primul sa formeze o linie de trei piese de aceeasi culoare castiga.");
        int mijx = getmaxx() / 2;
        int lg_succes=textwidth("SUCCES!");
        setcolor(YELLOW);
        outtextxy(mijx-lg_succes/2, 650, "SUCCES!");

        int lungime_inapoi = textwidth("<-- Inapoi");
        int h_inapoi=textheight("<--Inapoi");

        clearmouseclick(WM_LBUTTONDOWN);
        while(true)
        {
            int x=mousex();
            int y=mousey();
            if(y>=0 && y<=h_inapoi+20 && x>=0 && x<=lungime_inapoi)
            {
                setcolor(BLACK);
                outtextxy(20, 20, "<-Inapoi");
                delay(60);
                if (ismouseclick(WM_LBUTTONDOWN))
                    break;
            }
            else
            {
                setcolor(LIGHTCYAN);
                outtextxy(20, 20, "<-Inapoi");
                delay(60);
            }
            clearmouseclick(WM_LBUTTONDOWN);
        }
        int x=mousex();
        int y=mousey();
        if (x >= 0 && x <= lungime_inapoi && y >= 0 && y <= h_inapoi+20)
            main_menu();

    }
}

void button_Setari(int x, int y)
{
    int mijx = getmaxx() / 2;
    int mijy = getmaxy() / 2;
    int lungime_set= textwidth("SETARI");
    if (y>=500 && y<=550 && x>=mijx-lungime_set/2 && x<=mijx+lungime_set/2)
    {
        cleardevice();
        setcolor(LIGHTCYAN);
        settextstyle(COMPLEX_FONT, HORIZ_DIR, 5);
        int lungime_sunet = textwidth("Mute:");
        outtextxy(mijx-lungime_sunet/2, 600, "Mute:");
        int i, marime, deplasare_lungime, deplasare_inaltime;
        settextstyle(COMPLEX_FONT, HORIZ_DIR, 3);
        int lungime_inapoi = textwidth("<-- Inapoi");
        int h_inapoi=textheight("<--Inapoi");

        if (mute % 2 == 0) /// sunet pornit
        {
            setcolor(MAGENTA);
            line(mijx-lungime_sunet/2, 650, mijx-lungime_sunet/2 + 110, 700);
            setcolor(LIGHTCYAN);
            rectangle(mijx-lungime_sunet/2, 650, mijx-lungime_sunet/2 + 110, 700);
            marime = 3;
            deplasare_lungime = mijx-lungime_sunet/2 + 35;
            deplasare_inaltime = 665;
            for (i = 1; i <= 3; i++)
            {
                settextstyle(COMPLEX_FONT, HORIZ_DIR, marime);
                outtextxy(deplasare_lungime, deplasare_inaltime, ")");
                deplasare_lungime += 15;
                marime += 1;
                deplasare_inaltime -= 5;
            }
            settextstyle(COMPLEX_FONT, HORIZ_DIR, 3);
        }
        else if (mute % 2 == 1) /// sunet oprit
        {
            rectangle(mijx-lungime_sunet/2, 650, mijx-lungime_sunet/2 + 110, 700);
            marime = 3;
            deplasare_lungime = mijx-lungime_sunet/2 + 35;
            deplasare_inaltime = 665;
            for (i = 1; i <= 3; i++)
            {
                settextstyle(COMPLEX_FONT, HORIZ_DIR, marime);
                outtextxy(deplasare_lungime, deplasare_inaltime, ")");
                deplasare_lungime += 15;
                marime += 1;
                deplasare_inaltime -= 5;
            }
            settextstyle(COMPLEX_FONT, HORIZ_DIR, 3);
            line(mijx-lungime_sunet/2, 650, mijx-lungime_sunet/2 + 110, 700);
        }

        clearmouseclick(WM_LBUTTONDOWN);
        while(true)
        {
            int x=mousex();
            int y=mousey();

            if(y>=0 && y<=h_inapoi+20 && x>=0 && x<=lungime_inapoi)
            {
                setcolor(BLACK);
                outtextxy(20, 20, "<-Inapoi");
                delay(60);
                if(ismouseclick(WM_LBUTTONDOWN))
                    main_menu();
            }
            else if (y >= 650 && y <= 700 && x >= mijx-lungime_sunet/2 && x <= mijx-lungime_sunet/2 + 110)
            {
                if (ismouseclick(WM_LBUTTONDOWN))
                {
                    if (mute % 2 == 0) /// sunetul este pornit
                    {
                        line(mijx-lungime_sunet/2, 650, mijx-lungime_sunet/2 + 110, 700);
                        mute++;
                        PlaySound(TEXT("D:\\Proiecte\\Proiect_IP\\music\\mute.wav"), NULL, SND_ASYNC);
                    }
                    else if (mute % 2 == 1) /// sunetul este oprit
                    {
                        setcolor(MAGENTA);
                        line(mijx-lungime_sunet/2, 650, mijx-lungime_sunet/2 + 110, 700);
                        setcolor(LIGHTCYAN);
                        rectangle(mijx-lungime_sunet/2, 650, mijx-lungime_sunet/2 + 110, 700);
                        marime = 3;
                        deplasare_lungime = mijx-lungime_sunet/2 + 35;
                        deplasare_inaltime = 665;
                        for (i = 1; i <= 3; i++)
                        {
                            settextstyle(COMPLEX_FONT, HORIZ_DIR, marime);
                            outtextxy(deplasare_lungime, deplasare_inaltime, ")");
                            deplasare_lungime += 15;
                            marime += 1;
                            deplasare_inaltime -= 5;
                        }
                        settextstyle(COMPLEX_FONT, HORIZ_DIR, 3);
                        mute++;
                        PlaySound(TEXT("D:\\Proiecte\\Proiect_IP\\music\\song.wav"), NULL, SND_ASYNC);
                    }
                }
            }
            else
            {
                setcolor(LIGHTCYAN);
                outtextxy(20, 20, "<-Inapoi");
                delay(60);
            }
            clearmouseclick(WM_LBUTTONDOWN);

        }
        clearmouseclick(WM_LBUTTONDOWN);
    }

}

void main_menu()
{
    cleardevice();
    int mijx = getmaxx() / 2;
    int mijy = getmaxy() / 2;

    settextstyle(SANS_SERIF_FONT, HORIZ_DIR, 17);
    setcolor(YELLOW);
    int lungime_sir=textwidth("GOBBLET GOBBLERS");
    outtextxy(mijx-lungime_sir/2, 20, "GOBBLET GOBBLERS");

    settextstyle(COMPLEX_FONT, HORIZ_DIR, 20 );
    setcolor(LIGHTCYAN);
    int lungime_meniu =textwidth("MENIU");
    outtextxy(mijx-lungime_meniu/2, 150, "MENIU");

    settextstyle(COMPLEX_FONT, HORIZ_DIR, 18);
    setcolor(LIGHTCYAN);
    int lungime_start =textwidth("START");
    outtextxy(mijx-lungime_start/2, 300, "START");

    settextstyle(COMPLEX_FONT, HORIZ_DIR, 18);
    setcolor(LIGHTCYAN);
    int lungime_reguli = textwidth("REGULILE JOCULUI");
    outtextxy(mijx-lungime_reguli/2, 400, "REGULILE JOCULUI");

    settextstyle(COMPLEX_FONT, HORIZ_DIR, 18);
    setcolor(LIGHTCYAN);
    int lungime_set= textwidth("SETARI");
    outtextxy(mijx-lungime_set/2, 500, "SETARI");

    settextstyle(COMPLEX_FONT, HORIZ_DIR, 18);
    setcolor(LIGHTCYAN);
    int lungime_exit =textwidth("EXIT");
    outtextxy(mijx-lungime_exit/2, 600, "EXIT");

    ///pozitia cursorului

    clearmouseclick(WM_LBUTTONDOWN);
    while(true)
    {
        int x=mousex();
        int y=mousey();
        if(y>=300 && y<=345 && x>=mijx-lungime_start/2 && x<=mijx+lungime_start/2)
        {
            setcolor(BLACK);
            outtextxy(mijx-lungime_start/2, 300, "START");
            delay(60);
            if (ismouseclick(WM_LBUTTONDOWN))
                break;
        }
        else
        {
            setcolor(LIGHTCYAN);
            outtextxy(mijx-lungime_start/2, 300, "START");
        }

        if(y>=400 && y<=450 && x>=mijx-lungime_reguli/2 && x<=mijx+lungime_reguli/2)
        {
            setcolor(BLACK);
            outtextxy(mijx-lungime_reguli/2, 400, "REGULILE JOCULUI");
            delay(60);
            if (ismouseclick(WM_LBUTTONDOWN))
                break;
        }
        else
        {
            setcolor(LIGHTCYAN);
            outtextxy(mijx-lungime_reguli/2, 400, "REGULILE JOCULUI");
        }

        if(y>=500 && y<=550 && x>=mijx-lungime_set/2 && x<=mijx+lungime_set/2)
        {
            setcolor(BLACK);
            outtextxy(mijx-lungime_set/2, 500, "SETARI");
            delay(60);
            if (ismouseclick(WM_LBUTTONDOWN))
                break;
        }
        else
        {
            setcolor(LIGHTCYAN);
            outtextxy(mijx-lungime_set/2, 500, "SETARI");
        }

        if(y>=600 && y<=650 && x>=mijx-lungime_exit/2 && x<=mijx+lungime_exit/2)
        {
            setcolor(BLACK);
            outtextxy(mijx-lungime_exit/2, 600, "EXIT");
            delay(60);
            if (ismouseclick(WM_LBUTTONDOWN))
                break;
        }
        else
        {
            setcolor(LIGHTCYAN);
            outtextxy(mijx-lungime_exit/2, 600, "EXIT");
        }
        clearmouseclick(WM_LBUTTONDOWN);
    }

    int x=mousex();
    int y=mousey();

    Jucator jucator1, jucator2;

    button_start(x, y);
    button_Reguli(x, y);
    button_Setari(x, y);
    button_Exit(x, y);
}

int main()
{
    initwindow(latime_ecran, inaltime_ecran, "", -3, -3);
    setbkcolor(MAGENTA);
    PlaySound(TEXT("D:\\Proiecte\\Proiect_IP\\music\\song.wav"), NULL, SND_ASYNC); /// muzica
    main_menu();
    return 0;
}

